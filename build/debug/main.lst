ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB144:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "NOS_Lib.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  46:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  47:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch1;
  48:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_up;
  49:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch2_ch4;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** UART_HandleTypeDef huart1;
  52:Core/Src/main.c **** UART_HandleTypeDef huart2;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** extern uint8_t frameBufferA[3 * 512];
  56:Core/Src/main.c **** extern uint8_t frameBufferB[3 * 512];
  57:Core/Src/main.c **** extern uint8_t frameBufferC[3 * 512];
  58:Core/Src/main.c **** extern uint8_t frameBufferD[3 * 512];
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** NOS_TimeEvent screenUpdateEvent = {0};
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** WS2812B_Strip stripA = {0};
  63:Core/Src/main.c **** WS2812B_Strip stripB = {0};
  64:Core/Src/main.c **** WS2812B_Strip stripC = {0};
  65:Core/Src/main.c **** WS2812B_Strip stripD = {0};
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** PixelColor pixelsA[512];
  68:Core/Src/main.c **** PixelColor pixelsB[512];
  69:Core/Src/main.c **** PixelColor pixelsC[512];
  70:Core/Src/main.c **** PixelColor pixelsD[512];
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** NOS_UART_Struct UART2;
  73:Core/Src/main.c **** NOS_UART_Struct UART1;
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** int receiveTime = 0;
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** int uartPixelCount = 0;
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** int currColor = 0;
  80:Core/Src/main.c **** int buttonDelay = 0;
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** Effect_Struct breatheA = {0};
  83:Core/Src/main.c **** Effect_Struct rainbowA = {0};
  84:Core/Src/main.c **** Effect_Struct dotsA = {0};
  85:Core/Src/main.c **** Effect_Struct walkingPixelA = {0};
  86:Core/Src/main.c **** Effect_Struct steadyColorA = {0};
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** NOS_Short value;
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** UART_Message lastMessage;
  91:Core/Src/main.c **** UART_Message bluetoothMessage;
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** NOS_Flash_Chunk tempInitChunk = {0};
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** NOS_Flash_Memory_Struct flashMemoryStruct = {0};
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** PixelColor nullColor = {0,0,0};
  98:Core/Src/main.c **** PixelColor white = {255,255,255};
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* USER CODE END PV */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 103:Core/Src/main.c **** void SystemClock_Config(void);
 104:Core/Src/main.c **** static void MX_GPIO_Init(void);
 105:Core/Src/main.c **** static void MX_DMA_Init(void);
 106:Core/Src/main.c **** static void MX_SPI2_Init(void);
 107:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
 108:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 109:Core/Src/main.c **** static void MX_TIM2_Init(void);
 110:Core/Src/main.c **** static void MX_TIM1_Init(void);
 111:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /* USER CODE END PFP */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 116:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 117:Core/Src/main.c **** bool receive = false;
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef* huart) {
 120:Core/Src/main.c ****   if(huart->Instance == USART2)
 121:Core/Src/main.c ****   {  
 122:Core/Src/main.c ****     NOS_UART_ReceiveHandler(&UART2,huart);
 123:Core/Src/main.c ****     receive = true;
 124:Core/Src/main.c ****   }
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   if(huart->Instance == USART1)
 127:Core/Src/main.c ****   {
 128:Core/Src/main.c ****     NOS_UART_ReceiveHandler(&UART1,huart);
 129:Core/Src/main.c ****     receive = true;
 130:Core/Src/main.c ****   }
 131:Core/Src/main.c **** }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** bool tick = false;
 134:Core/Src/main.c **** bool screenUpdate = false;
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** #define FLASH_REBUILD
 137:Core/Src/main.c **** /* USER CODE END 0 */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** /**
 140:Core/Src/main.c ****   * @brief  The application entry point.
 141:Core/Src/main.c ****   * @retval int
 142:Core/Src/main.c ****   */
 143:Core/Src/main.c **** int main(void)
 144:Core/Src/main.c **** {
 145:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* USER CODE END 1 */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 152:Core/Src/main.c ****   HAL_Init();
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* USER CODE END Init */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* Configure the system clock */
 159:Core/Src/main.c ****   SystemClock_Config();
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* USER CODE END SysInit */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /* Initialize all configured peripherals */
 166:Core/Src/main.c ****   MX_GPIO_Init();
 167:Core/Src/main.c ****   MX_DMA_Init();
 168:Core/Src/main.c ****   MX_SPI2_Init();
 169:Core/Src/main.c ****   MX_USART1_UART_Init();
 170:Core/Src/main.c ****   MX_USART2_UART_Init();
 171:Core/Src/main.c ****   MX_TIM2_Init();
 172:Core/Src/main.c ****   MX_TIM1_Init();
 173:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 174:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1,UART1.rx_buff,1);
 175:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2,UART2.rx_buff,1);
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   HAL_UART_Transmit(&huart1,"HELLO",sizeof("HELLO"),1000);
 178:Core/Src/main.c ****   HAL_UART_Transmit(&huart2,"HELLO",sizeof("HELLO"),1000);
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   visInit();
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   NOS_WS2812B_Strip_FullInit(&stripA,&frameBufferA,&pixelsA,128);
 183:Core/Src/main.c ****   NOS_WS2812B_Strip_FullInit(&stripB,&frameBufferB,&pixelsB,128);
 184:Core/Src/main.c ****   NOS_WS2812B_Strip_FullInit(&stripC,&frameBufferC,&pixelsC,128);
 185:Core/Src/main.c ****   NOS_WS2812B_Strip_FullInit(&stripD,&frameBufferD,&pixelsD,128);
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   NOS_TimeEvent_Init(&screenUpdateEvent, 20);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   NOS_UART_ReceiveAbort(&UART2,&huart2);
 190:Core/Src/main.c ****   NOS_UART_ReceiveAbort(&UART1,&huart1);
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /*
 193:Core/Src/main.c ****   NOS_FlashMemory_Struct_Init(&flashMemoryStruct,FLASH_STORAGE_A);
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   NOS_Flash_Chunk_Init(&tempInitChunk,&breatheA,sizeof(Effect_Struct));
 196:Core/Src/main.c ****   NOS_FlashMemory_Struct_AddChunk(&flashMemoryStruct,&tempInitChunk);
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   NOS_Flash_Chunk_Init(&tempInitChunk,&rainbowA,sizeof(Effect_Struct));
 199:Core/Src/main.c ****   NOS_FlashMemory_Struct_AddChunk(&flashMemoryStruct,&tempInitChunk);
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   NOS_Flash_Chunk_Init(&tempInitChunk,&dotsA,sizeof(Effect_Struct));
 202:Core/Src/main.c ****   NOS_FlashMemory_Struct_AddChunk(&flashMemoryStruct,&tempInitChunk);
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   NOS_Flash_Chunk_Init(&tempInitChunk,&walkingPixelA,sizeof(Effect_Struct));
 205:Core/Src/main.c ****   NOS_FlashMemory_Struct_AddChunk(&flashMemoryStruct,&tempInitChunk);
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   NOS_Flash_Chunk_Init(&tempInitChunk,&steadyColorA,sizeof(Effect_Struct));
 208:Core/Src/main.c ****   NOS_FlashMemory_Struct_AddChunk(&flashMemoryStruct,&tempInitChunk);
 209:Core/Src/main.c ****   
 210:Core/Src/main.c ****   #ifndef FLASH_REBUILD
 211:Core/Src/main.c ****   if(NOS_FlashMemory_Struct_Validate(&flashMemoryStruct))
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     NOS_Flash_Memory_Struct_Load(&flashMemoryStruct);
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c ****   else
 216:Core/Src/main.c ****   {
 217:Core/Src/main.c ****     NOS_WS2812B_Strip_Effect_Init(&breatheA,&nullColor,100,1,60,80,0,0,0,0,EFFECT_BREATHE_ID,true);
 218:Core/Src/main.c ****     NOS_WS2812B_Strip_Effect_Init(&rainbowA,&nullColor,1000,1,200,800,0,0,0,0,EFFECT_RAINBOW_ID,tru
 219:Core/Src/main.c ****     NOS_WS2812B_Strip_Effect_Init(&dotsA,&white,40,1,0,100,0,0,0,0,EFFECT_DOTS_ID,true);
 220:Core/Src/main.c ****     NOS_WS2812B_Strip_Effect_Init(&walkingPixelA,&white,1000,1,0,48,3,0,0,0,EFFECT_WALKING_PIXELS_I
 221:Core/Src/main.c ****     NOS_WS2812B_Strip_Effect_Init(&steadyColorA,&white,0,0,0,0,0,0,0,0,EFFECT_STEADY_COLOR_ID,true)
 222:Core/Src/main.c ****   }
 223:Core/Src/main.c ****   #endif
 224:Core/Src/main.c **** */
 225:Core/Src/main.c ****   #ifdef FLASH_REBUILD
 226:Core/Src/main.c ****   NOS_WS2812B_Strip_Effect_Init(&breatheA,&nullColor,20,1,40,60,0,0,0,0,EFFECT_BREATHE_ID,true);
 227:Core/Src/main.c ****   NOS_WS2812B_Strip_Effect_Init(&rainbowA,&nullColor,1000,1,200,800,0,0,0,0,EFFECT_RAINBOW_ID,false
 228:Core/Src/main.c ****   NOS_WS2812B_Strip_Effect_Init(&dotsA,&white,40,1,0,100,0,0,0,0,EFFECT_DOTS_ID,false);
 229:Core/Src/main.c ****   NOS_WS2812B_Strip_Effect_Init(&walkingPixelA,&white,100,1,0,48,3,0,0,0,EFFECT_WALKING_PIXELS_ID,f
 230:Core/Src/main.c ****   NOS_WS2812B_Strip_Effect_Init(&steadyColorA,&white,0,0,0,0,0,0,0,0,EFFECT_STEADY_COLOR_ID,false);
 231:Core/Src/main.c ****   #endif
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripA,breatheA);
 234:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripB,breatheA);
 235:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripC,breatheA);
 236:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripD,breatheA);
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripA,rainbowA);
 239:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripB,rainbowA);
 240:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripC,rainbowA);
 241:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripD,rainbowA);
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripA,dotsA);
 244:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripB,dotsA);
 245:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripC,dotsA);
 246:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripD,dotsA);
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripA,walkingPixelA);
 249:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripB,walkingPixelA);
 250:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripC,walkingPixelA);
 251:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripD,walkingPixelA);
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripA,steadyColorA);
 254:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripB,steadyColorA);
 255:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripC,steadyColorA);
 256:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripD,steadyColorA);
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   NOS_WS2812B_Strip_ColorFill(&stripA,white);
 259:Core/Src/main.c ****   NOS_WS2812B_Strip_ColorFill(&stripB,white);
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 6


 260:Core/Src/main.c ****   NOS_WS2812B_Strip_ColorFill(&stripC,white);
 261:Core/Src/main.c ****   NOS_WS2812B_Strip_ColorFill(&stripD,white);
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   NOS_WS2812B_Strip_Update(&stripA);
 264:Core/Src/main.c ****   NOS_WS2812B_Strip_Update(&stripB);
 265:Core/Src/main.c ****   NOS_WS2812B_Strip_Update(&stripC);
 266:Core/Src/main.c ****   NOS_WS2812B_Strip_Update(&stripD);
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   NOS_Strip_UART_ParseStringCommand(&stripA,"&/Breathe/70/80/20/true/&/Rainbow/#0000ff/#7f00ff/60/f
 269:Core/Src/main.c ****   NOS_Strip_UART_ParseStringCommand(&stripB,"&/Breathe/70/80/20/true/&/Rainbow/#0000ff/#7f00ff/60/f
 270:Core/Src/main.c ****   NOS_Strip_UART_ParseStringCommand(&stripC,"&/Breathe/70/80/20/true/&/Rainbow/#0000ff/#7f00ff/60/f
 271:Core/Src/main.c ****   /* USER CODE END 2 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* Infinite loop */
 274:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 275:Core/Src/main.c ****   while (1)
 276:Core/Src/main.c ****   {
 277:Core/Src/main.c ****     if(tick)
 278:Core/Src/main.c ****     {
 279:Core/Src/main.c ****           NOS_UART_Timer_Handler(&UART2);
 280:Core/Src/main.c ****           NOS_UART_Timer_Handler(&UART1);
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****           NOS_TimeEvent_TickHandler(&screenUpdateEvent);
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****           NOS_WS2812B_Strip_Effects_Handler(&stripA);
 285:Core/Src/main.c ****           NOS_WS2812B_Strip_Effects_Handler(&stripB);
 286:Core/Src/main.c ****           NOS_WS2812B_Strip_Effects_Handler(&stripC);
 287:Core/Src/main.c ****           NOS_WS2812B_Strip_Effects_Handler(&stripD);
 288:Core/Src/main.c ****           tick = false;
 289:Core/Src/main.c ****     }
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****     if(NOS_UART_CheckReceive(&UART1))
 292:Core/Src/main.c ****     {
 293:Core/Src/main.c ****       if(NOS_Strip_UART_ParseStringCommand(&stripA,UART1.rx_buff,UART1.lastMessageSize))
 294:Core/Src/main.c ****       {
 295:Core/Src/main.c ****         NOS_Strip_UART_ParseStringCommand(&stripB,UART1.rx_buff,UART1.lastMessageSize);
 296:Core/Src/main.c ****         NOS_Strip_UART_ParseStringCommand(&stripC,UART1.rx_buff,UART1.lastMessageSize);
 297:Core/Src/main.c ****         NOS_Strip_UART_ParseStringCommand(&stripD,UART1.rx_buff,UART1.lastMessageSize);
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****         /*
 300:Core/Src/main.c ****         NOS_WS2812B_Strip_Effect_Copy(&breatheA,&stripA.effects[0]);
 301:Core/Src/main.c ****         NOS_WS2812B_Strip_Effect_Copy(&rainbowA,&stripA.effects[1]);
 302:Core/Src/main.c ****         NOS_WS2812B_Strip_Effect_Copy(&dotsA,&stripA.effects[2]);
 303:Core/Src/main.c ****         NOS_WS2812B_Strip_Effect_Copy(&walkingPixelA,&stripA.effects[3]);
 304:Core/Src/main.c ****         NOS_WS2812B_Strip_Effect_Copy(&steadyColorA,&stripA.effects[4]);
 305:Core/Src/main.c ****         */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****         //NOS_Flash_Memory_Struct_Save(&flashMemoryStruct);
 308:Core/Src/main.c ****       }
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****       NOS_UART_EndReceive(&UART1);
 311:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOC,GPIO_PIN_13);
 312:Core/Src/main.c ****       
 313:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripA);
 314:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripB);
 315:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripC);
 316:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripD);
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 7


 317:Core/Src/main.c ****       visHandle();
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****     }
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****     if(NOS_UART_CheckReceive(&UART2))
 322:Core/Src/main.c ****     {
 323:Core/Src/main.c ****       if(NOS_UART_ParsePacket(&UART2,&lastMessage)) 
 324:Core/Src/main.c ****       {
 325:Core/Src/main.c ****       
 326:Core/Src/main.c ****       switch (lastMessage.channel.data)
 327:Core/Src/main.c ****       {
 328:Core/Src/main.c ****         //Global leds strips commands
 329:Core/Src/main.c ****         case 0x01:
 330:Core/Src/main.c ****         
 331:Core/Src/main.c ****           NOS_Strip_UART_ParseCommand(&stripA,&lastMessage);
 332:Core/Src/main.c ****           NOS_Strip_UART_ParseCommand(&stripB,&lastMessage);
 333:Core/Src/main.c ****           NOS_Strip_UART_ParseCommand(&stripC,&lastMessage);
 334:Core/Src/main.c ****           NOS_Strip_UART_ParseCommand(&stripD,&lastMessage);
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&breatheA,&stripA.effects[0]);
 337:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&rainbowA,&stripA.effects[1]);
 338:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&dotsA,&stripA.effects[2]);
 339:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&walkingPixelA,&stripA.effects[3]);
 340:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&steadyColorA,&stripA.effects[4]);
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****           //NOS_Flash_Memory_Struct_Save(&flashMemoryStruct);
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****         break;
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****         //stripA commands
 348:Core/Src/main.c ****         case 0x02:
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****           NOS_Strip_UART_ParseCommand(&stripA,&lastMessage);
 351:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&dotsA,&stripA.effects[2]);
 352:Core/Src/main.c ****           //NOS_Flash_Memory_Struct_Save(&flashMemoryStruct);
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****         break;
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****         //stripB commands
 357:Core/Src/main.c ****         case 0x03:
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****           NOS_Strip_UART_ParseCommand(&stripB,&lastMessage);
 360:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&dotsA,&stripB.effects[2]);
 361:Core/Src/main.c ****           //NOS_Flash_Memory_Struct_Save(&flashMemoryStruct);
 362:Core/Src/main.c ****               
 363:Core/Src/main.c ****         break;
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****         //stripC commands
 366:Core/Src/main.c ****         case 0x04:
 367:Core/Src/main.c **** 
 368:Core/Src/main.c ****           NOS_Strip_UART_ParseCommand(&stripC,&lastMessage);
 369:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&dotsA,&stripC.effects[2]);
 370:Core/Src/main.c ****           //NOS_Flash_Memory_Struct_Save(&flashMemoryStruct);
 371:Core/Src/main.c **** 
 372:Core/Src/main.c ****         break;
 373:Core/Src/main.c **** 
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 8


 374:Core/Src/main.c ****         //stripD commands
 375:Core/Src/main.c ****         case 0x05:
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****           NOS_Strip_UART_ParseCommand(&stripD,&lastMessage);
 378:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&dotsA,&stripD.effects[2]);
 379:Core/Src/main.c ****           //NOS_Flash_Memory_Struct_Save(&flashMemoryStruct);
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****         break;
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****           default:
 384:Core/Src/main.c ****           break;
 385:Core/Src/main.c ****         }
 386:Core/Src/main.c ****       }
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****       NOS_UART_EndReceive(&UART2);
 389:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOC,GPIO_PIN_13);
 390:Core/Src/main.c ****       
 391:Core/Src/main.c ****       NOS_UART_PacketApprovedNotice(&lastMessage,&huart2);
 392:Core/Src/main.c ****       
 393:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripA);
 394:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripB);
 395:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripC);
 396:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripD);
 397:Core/Src/main.c ****       visHandle();
 398:Core/Src/main.c ****       
 399:Core/Src/main.c ****     }
 400:Core/Src/main.c **** 
 401:Core/Src/main.c ****     if (NOS_TimeEvent_Check(&screenUpdateEvent))
 402:Core/Src/main.c ****     {
 403:Core/Src/main.c ****       
 404:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripA);
 405:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripB);
 406:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripC);
 407:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripD);
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****       visHandle();
 410:Core/Src/main.c ****       
 411:Core/Src/main.c ****       NOS_TimeEvent_FinishEvent(&screenUpdateEvent);
 412:Core/Src/main.c ****     }
 413:Core/Src/main.c ****     /* USER CODE END WHILE */
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 416:Core/Src/main.c ****   }
 417:Core/Src/main.c ****   /* USER CODE END 3 */
 418:Core/Src/main.c **** }
 419:Core/Src/main.c **** 
 420:Core/Src/main.c **** /**
 421:Core/Src/main.c ****   * @brief System Clock Configuration
 422:Core/Src/main.c ****   * @retval None
 423:Core/Src/main.c ****   */
 424:Core/Src/main.c **** void SystemClock_Config(void)
 425:Core/Src/main.c **** {
 426:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 427:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 430:Core/Src/main.c ****   */
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 9


 431:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 432:Core/Src/main.c ****   {
 433:Core/Src/main.c ****     Error_Handler();
 434:Core/Src/main.c ****   }
 435:Core/Src/main.c **** 
 436:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 437:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 438:Core/Src/main.c ****   */
 439:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 440:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 441:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 442:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 443:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 444:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 445:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 8;
 446:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 447:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 448:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 449:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 450:Core/Src/main.c ****   {
 451:Core/Src/main.c ****     Error_Handler();
 452:Core/Src/main.c ****   }
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 455:Core/Src/main.c ****   */
 456:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 457:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 458:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 459:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 460:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 461:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 464:Core/Src/main.c ****   {
 465:Core/Src/main.c ****     Error_Handler();
 466:Core/Src/main.c ****   }
 467:Core/Src/main.c **** }
 468:Core/Src/main.c **** 
 469:Core/Src/main.c **** /**
 470:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 471:Core/Src/main.c ****   * @param None
 472:Core/Src/main.c ****   * @retval None
 473:Core/Src/main.c ****   */
 474:Core/Src/main.c **** static void MX_SPI2_Init(void)
 475:Core/Src/main.c **** {
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 482:Core/Src/main.c **** 
 483:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 484:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 485:Core/Src/main.c ****   hspi2.Instance = SPI2;
 486:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 487:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 10


 488:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 489:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 490:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 491:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 492:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 493:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 494:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 495:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 496:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 497:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 498:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 499:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 500:Core/Src/main.c ****   {
 501:Core/Src/main.c ****     Error_Handler();
 502:Core/Src/main.c ****   }
 503:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** }
 508:Core/Src/main.c **** 
 509:Core/Src/main.c **** /**
 510:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 511:Core/Src/main.c ****   * @param None
 512:Core/Src/main.c ****   * @retval None
 513:Core/Src/main.c ****   */
 514:Core/Src/main.c **** static void MX_TIM1_Init(void)
 515:Core/Src/main.c **** {
 516:Core/Src/main.c **** 
 517:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 518:Core/Src/main.c **** 
 519:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 520:Core/Src/main.c **** 
 521:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 522:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 523:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 524:Core/Src/main.c **** 
 525:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 526:Core/Src/main.c **** 
 527:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 528:Core/Src/main.c ****   htim1.Instance = TIM1;
 529:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 530:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 531:Core/Src/main.c ****   htim1.Init.Period = 65535;
 532:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 533:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 534:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 535:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim1) != HAL_OK)
 536:Core/Src/main.c ****   {
 537:Core/Src/main.c ****     Error_Handler();
 538:Core/Src/main.c ****   }
 539:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 540:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 541:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 542:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 543:Core/Src/main.c ****   {
 544:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 11


 545:Core/Src/main.c ****   }
 546:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 547:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 548:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 549:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 550:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 551:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 552:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 553:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 554:Core/Src/main.c ****   {
 555:Core/Src/main.c ****     Error_Handler();
 556:Core/Src/main.c ****   }
 557:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 558:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 559:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 560:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 561:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 562:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 563:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 564:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 565:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 566:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 567:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 568:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 569:Core/Src/main.c ****   {
 570:Core/Src/main.c ****     Error_Handler();
 571:Core/Src/main.c ****   }
 572:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 573:Core/Src/main.c **** 
 574:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** }
 577:Core/Src/main.c **** 
 578:Core/Src/main.c **** /**
 579:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 580:Core/Src/main.c ****   * @param None
 581:Core/Src/main.c ****   * @retval None
 582:Core/Src/main.c ****   */
 583:Core/Src/main.c **** static void MX_TIM2_Init(void)
 584:Core/Src/main.c **** {
 585:Core/Src/main.c **** 
 586:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 587:Core/Src/main.c **** 
 588:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 589:Core/Src/main.c **** 
 590:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 591:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 592:Core/Src/main.c **** 
 593:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 594:Core/Src/main.c **** 
 595:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 596:Core/Src/main.c ****   htim2.Instance = TIM2;
 597:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 598:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 599:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 600:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 601:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 12


 602:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 603:Core/Src/main.c ****   {
 604:Core/Src/main.c ****     Error_Handler();
 605:Core/Src/main.c ****   }
 606:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 607:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 608:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 609:Core/Src/main.c ****   {
 610:Core/Src/main.c ****     Error_Handler();
 611:Core/Src/main.c ****   }
 612:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 613:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 614:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 615:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 616:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 617:Core/Src/main.c ****   {
 618:Core/Src/main.c ****     Error_Handler();
 619:Core/Src/main.c ****   }
 620:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 621:Core/Src/main.c ****   {
 622:Core/Src/main.c ****     Error_Handler();
 623:Core/Src/main.c ****   }
 624:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 625:Core/Src/main.c **** 
 626:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 627:Core/Src/main.c **** 
 628:Core/Src/main.c **** }
 629:Core/Src/main.c **** 
 630:Core/Src/main.c **** /**
 631:Core/Src/main.c ****   * @brief USART1 Initialization Function
 632:Core/Src/main.c ****   * @param None
 633:Core/Src/main.c ****   * @retval None
 634:Core/Src/main.c ****   */
 635:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 636:Core/Src/main.c **** {
 637:Core/Src/main.c **** 
 638:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 639:Core/Src/main.c **** 
 640:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 641:Core/Src/main.c **** 
 642:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 643:Core/Src/main.c **** 
 644:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 645:Core/Src/main.c ****   huart1.Instance = USART1;
 646:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 647:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 648:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 649:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 650:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 651:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 652:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 653:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 654:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 655:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 656:Core/Src/main.c ****   {
 657:Core/Src/main.c ****     Error_Handler();
 658:Core/Src/main.c ****   }
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 13


 659:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 660:Core/Src/main.c **** 
 661:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 662:Core/Src/main.c **** 
 663:Core/Src/main.c **** }
 664:Core/Src/main.c **** 
 665:Core/Src/main.c **** /**
 666:Core/Src/main.c ****   * @brief USART2 Initialization Function
 667:Core/Src/main.c ****   * @param None
 668:Core/Src/main.c ****   * @retval None
 669:Core/Src/main.c ****   */
 670:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 671:Core/Src/main.c **** {
 672:Core/Src/main.c **** 
 673:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 674:Core/Src/main.c **** 
 675:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 676:Core/Src/main.c **** 
 677:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 678:Core/Src/main.c **** 
 679:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 680:Core/Src/main.c ****   huart2.Instance = USART2;
 681:Core/Src/main.c ****   huart2.Init.BaudRate = 460800;
 682:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 683:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 684:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 685:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 686:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 687:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 688:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 689:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 690:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 691:Core/Src/main.c ****   {
 692:Core/Src/main.c ****     Error_Handler();
 693:Core/Src/main.c ****   }
 694:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 695:Core/Src/main.c **** 
 696:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 697:Core/Src/main.c **** 
 698:Core/Src/main.c **** }
 699:Core/Src/main.c **** 
 700:Core/Src/main.c **** /**
 701:Core/Src/main.c ****   * Enable DMA controller clock
 702:Core/Src/main.c ****   */
 703:Core/Src/main.c **** static void MX_DMA_Init(void)
 704:Core/Src/main.c **** {
 705:Core/Src/main.c **** 
 706:Core/Src/main.c ****   /* DMA controller clock enable */
 707:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 708:Core/Src/main.c **** 
 709:Core/Src/main.c ****   /* DMA interrupt init */
 710:Core/Src/main.c ****   /* DMA1_Channel2_IRQn interrupt configuration */
 711:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 712:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 713:Core/Src/main.c ****   /* DMA1_Channel5_IRQn interrupt configuration */
 714:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 0, 0);
 715:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 14


 716:Core/Src/main.c ****   /* DMA1_Channel7_IRQn interrupt configuration */
 717:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel7_IRQn, 0, 0);
 718:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel7_IRQn);
 719:Core/Src/main.c **** 
 720:Core/Src/main.c **** }
 721:Core/Src/main.c **** 
 722:Core/Src/main.c **** /**
 723:Core/Src/main.c ****   * @brief GPIO Initialization Function
 724:Core/Src/main.c ****   * @param None
 725:Core/Src/main.c ****   * @retval None
 726:Core/Src/main.c ****   */
 727:Core/Src/main.c **** static void MX_GPIO_Init(void)
 728:Core/Src/main.c **** {
  28              		.loc 1 728 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              		.cfi_def_cfa_offset 40
 729:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 729 3 view .LVU1
  39              		.loc 1 729 20 is_stmt 0 view .LVU2
  40 0004 0024     		movs	r4, #0
  41 0006 0394     		str	r4, [sp, #12]
  42 0008 0494     		str	r4, [sp, #16]
  43 000a 0594     		str	r4, [sp, #20]
  44 000c 0694     		str	r4, [sp, #24]
  45 000e 0794     		str	r4, [sp, #28]
 730:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 731:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 732:Core/Src/main.c **** 
 733:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 734:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  46              		.loc 1 734 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 734 3 view .LVU4
  49              		.loc 1 734 3 view .LVU5
  50 0010 1B4B     		ldr	r3, .L3
  51 0012 DA6C     		ldr	r2, [r3, #76]
  52 0014 42F00102 		orr	r2, r2, #1
  53 0018 DA64     		str	r2, [r3, #76]
  54              		.loc 1 734 3 view .LVU6
  55 001a DA6C     		ldr	r2, [r3, #76]
  56 001c 02F00102 		and	r2, r2, #1
  57 0020 0092     		str	r2, [sp]
  58              		.loc 1 734 3 view .LVU7
  59 0022 009A     		ldr	r2, [sp]
  60              	.LBE4:
  61              		.loc 1 734 3 view .LVU8
 735:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  62              		.loc 1 735 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 735 3 view .LVU10
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 15


  65              		.loc 1 735 3 view .LVU11
  66 0024 DA6C     		ldr	r2, [r3, #76]
  67 0026 42F00202 		orr	r2, r2, #2
  68 002a DA64     		str	r2, [r3, #76]
  69              		.loc 1 735 3 view .LVU12
  70 002c DA6C     		ldr	r2, [r3, #76]
  71 002e 02F00202 		and	r2, r2, #2
  72 0032 0192     		str	r2, [sp, #4]
  73              		.loc 1 735 3 view .LVU13
  74 0034 019A     		ldr	r2, [sp, #4]
  75              	.LBE5:
  76              		.loc 1 735 3 view .LVU14
 736:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  77              		.loc 1 736 3 view .LVU15
  78              	.LBB6:
  79              		.loc 1 736 3 view .LVU16
  80              		.loc 1 736 3 view .LVU17
  81 0036 DA6C     		ldr	r2, [r3, #76]
  82 0038 42F08002 		orr	r2, r2, #128
  83 003c DA64     		str	r2, [r3, #76]
  84              		.loc 1 736 3 view .LVU18
  85 003e DB6C     		ldr	r3, [r3, #76]
  86 0040 03F08003 		and	r3, r3, #128
  87 0044 0293     		str	r3, [sp, #8]
  88              		.loc 1 736 3 view .LVU19
  89 0046 029B     		ldr	r3, [sp, #8]
  90              	.LBE6:
  91              		.loc 1 736 3 view .LVU20
 737:Core/Src/main.c **** 
 738:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 739:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, DIA_LED_Pin|WS_LED_1_Pin|WS_LED_2_Pin|WS_LED_3_Pin
  92              		.loc 1 739 3 view .LVU21
  93 0048 2246     		mov	r2, r4
  94 004a F221     		movs	r1, #242
  95 004c 4FF09040 		mov	r0, #1207959552
  96 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  97              	.LVL0:
 740:Core/Src/main.c ****                           |WS_LED_4_Pin, GPIO_PIN_RESET);
 741:Core/Src/main.c **** 
 742:Core/Src/main.c ****   /*Configure GPIO pins : DIA_LED_Pin WS_LED_1_Pin WS_LED_2_Pin WS_LED_3_Pin
 743:Core/Src/main.c ****                            WS_LED_4_Pin */
 744:Core/Src/main.c ****   GPIO_InitStruct.Pin = DIA_LED_Pin|WS_LED_1_Pin|WS_LED_2_Pin|WS_LED_3_Pin
  98              		.loc 1 744 3 view .LVU22
  99              		.loc 1 744 23 is_stmt 0 view .LVU23
 100 0054 F223     		movs	r3, #242
 101 0056 0393     		str	r3, [sp, #12]
 745:Core/Src/main.c ****                           |WS_LED_4_Pin;
 746:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 102              		.loc 1 746 3 is_stmt 1 view .LVU24
 103              		.loc 1 746 24 is_stmt 0 view .LVU25
 104 0058 0123     		movs	r3, #1
 105 005a 0493     		str	r3, [sp, #16]
 747:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 106              		.loc 1 747 3 is_stmt 1 view .LVU26
 107              		.loc 1 747 24 is_stmt 0 view .LVU27
 108 005c 0594     		str	r4, [sp, #20]
 748:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 16


 109              		.loc 1 748 3 is_stmt 1 view .LVU28
 110              		.loc 1 748 25 is_stmt 0 view .LVU29
 111 005e 0694     		str	r4, [sp, #24]
 749:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 112              		.loc 1 749 3 is_stmt 1 view .LVU30
 113 0060 03A9     		add	r1, sp, #12
 114 0062 4FF09040 		mov	r0, #1207959552
 115 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 116              	.LVL1:
 750:Core/Src/main.c **** 
 751:Core/Src/main.c ****   /*Configure GPIO pin : PH3 */
 752:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3;
 117              		.loc 1 752 3 view .LVU31
 118              		.loc 1 752 23 is_stmt 0 view .LVU32
 119 006a 0823     		movs	r3, #8
 120 006c 0393     		str	r3, [sp, #12]
 753:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 121              		.loc 1 753 3 is_stmt 1 view .LVU33
 122              		.loc 1 753 24 is_stmt 0 view .LVU34
 123 006e 0323     		movs	r3, #3
 124 0070 0493     		str	r3, [sp, #16]
 754:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 125              		.loc 1 754 3 is_stmt 1 view .LVU35
 126              		.loc 1 754 24 is_stmt 0 view .LVU36
 127 0072 0594     		str	r4, [sp, #20]
 755:Core/Src/main.c ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 128              		.loc 1 755 3 is_stmt 1 view .LVU37
 129 0074 03A9     		add	r1, sp, #12
 130 0076 0348     		ldr	r0, .L3+4
 131 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 132              	.LVL2:
 756:Core/Src/main.c **** 
 757:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 758:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 759:Core/Src/main.c **** }
 133              		.loc 1 759 1 is_stmt 0 view .LVU38
 134 007c 08B0     		add	sp, sp, #32
 135              		.cfi_def_cfa_offset 8
 136              		@ sp needed
 137 007e 10BD     		pop	{r4, pc}
 138              	.L4:
 139              		.align	2
 140              	.L3:
 141 0080 00100240 		.word	1073876992
 142 0084 001C0048 		.word	1207966720
 143              		.cfi_endproc
 144              	.LFE144:
 146              		.section	.text.MX_DMA_Init,"ax",%progbits
 147              		.align	1
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 152              	MX_DMA_Init:
 153              	.LFB143:
 704:Core/Src/main.c **** 
 154              		.loc 1 704 1 is_stmt 1 view -0
 155              		.cfi_startproc
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 17


 156              		@ args = 0, pretend = 0, frame = 8
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158 0000 00B5     		push	{lr}
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 14, -4
 161 0002 83B0     		sub	sp, sp, #12
 162              		.cfi_def_cfa_offset 16
 707:Core/Src/main.c **** 
 163              		.loc 1 707 3 view .LVU40
 164              	.LBB7:
 707:Core/Src/main.c **** 
 165              		.loc 1 707 3 view .LVU41
 707:Core/Src/main.c **** 
 166              		.loc 1 707 3 view .LVU42
 167 0004 124B     		ldr	r3, .L7
 168 0006 9A6C     		ldr	r2, [r3, #72]
 169 0008 42F00102 		orr	r2, r2, #1
 170 000c 9A64     		str	r2, [r3, #72]
 707:Core/Src/main.c **** 
 171              		.loc 1 707 3 view .LVU43
 172 000e 9B6C     		ldr	r3, [r3, #72]
 173 0010 03F00103 		and	r3, r3, #1
 174 0014 0193     		str	r3, [sp, #4]
 707:Core/Src/main.c **** 
 175              		.loc 1 707 3 view .LVU44
 176 0016 019B     		ldr	r3, [sp, #4]
 177              	.LBE7:
 707:Core/Src/main.c **** 
 178              		.loc 1 707 3 view .LVU45
 711:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 179              		.loc 1 711 3 view .LVU46
 180 0018 0022     		movs	r2, #0
 181 001a 1146     		mov	r1, r2
 182 001c 0C20     		movs	r0, #12
 183 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 184              	.LVL3:
 712:Core/Src/main.c ****   /* DMA1_Channel5_IRQn interrupt configuration */
 185              		.loc 1 712 3 view .LVU47
 186 0022 0C20     		movs	r0, #12
 187 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 188              	.LVL4:
 714:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
 189              		.loc 1 714 3 view .LVU48
 190 0028 0022     		movs	r2, #0
 191 002a 1146     		mov	r1, r2
 192 002c 0F20     		movs	r0, #15
 193 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 194              	.LVL5:
 715:Core/Src/main.c ****   /* DMA1_Channel7_IRQn interrupt configuration */
 195              		.loc 1 715 3 view .LVU49
 196 0032 0F20     		movs	r0, #15
 197 0034 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 198              	.LVL6:
 717:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel7_IRQn);
 199              		.loc 1 717 3 view .LVU50
 200 0038 0022     		movs	r2, #0
 201 003a 1146     		mov	r1, r2
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 18


 202 003c 1120     		movs	r0, #17
 203 003e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 204              	.LVL7:
 718:Core/Src/main.c **** 
 205              		.loc 1 718 3 view .LVU51
 206 0042 1120     		movs	r0, #17
 207 0044 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 208              	.LVL8:
 720:Core/Src/main.c **** 
 209              		.loc 1 720 1 is_stmt 0 view .LVU52
 210 0048 03B0     		add	sp, sp, #12
 211              		.cfi_def_cfa_offset 4
 212              		@ sp needed
 213 004a 5DF804FB 		ldr	pc, [sp], #4
 214              	.L8:
 215 004e 00BF     		.align	2
 216              	.L7:
 217 0050 00100240 		.word	1073876992
 218              		.cfi_endproc
 219              	.LFE143:
 221              		.section	.text.NOS_RAM_Init,"ax",%progbits
 222              		.align	1
 223              		.global	NOS_RAM_Init
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 228              	NOS_RAM_Init:
 229              	.LVL9:
 230              	.LFB132:
 231              		.file 2 "Core/Inc/NOS_RAM.h"
   1:Core/Inc/NOS_RAM.h **** #include "NOS_Includes.h"
   2:Core/Inc/NOS_RAM.h **** 
   3:Core/Inc/NOS_RAM.h **** #define RAM_OVERFLOW 0x01
   4:Core/Inc/NOS_RAM.h **** 
   5:Core/Inc/NOS_RAM.h **** #define RAM_CHUNK_MAX_COUNT 128
   6:Core/Inc/NOS_RAM.h **** #define RAM_SIZE 4096
   7:Core/Inc/NOS_RAM.h **** 
   8:Core/Inc/NOS_RAM.h **** typedef struct 
   9:Core/Inc/NOS_RAM.h **** {
  10:Core/Inc/NOS_RAM.h ****     void* dataPtr;
  11:Core/Inc/NOS_RAM.h ****     size_t size;
  12:Core/Inc/NOS_RAM.h **** }NOS_RAM_Chunk;
  13:Core/Inc/NOS_RAM.h **** 
  14:Core/Inc/NOS_RAM.h **** 
  15:Core/Inc/NOS_RAM.h **** typedef struct 
  16:Core/Inc/NOS_RAM.h **** {
  17:Core/Inc/NOS_RAM.h ****     NOS_RAM_Chunk chunks[RAM_CHUNK_MAX_COUNT];
  18:Core/Inc/NOS_RAM.h ****     uint8_t data[RAM_SIZE];
  19:Core/Inc/NOS_RAM.h ****     uint8_t* topPointer;
  20:Core/Inc/NOS_RAM.h ****     uint8_t chunksCount;
  21:Core/Inc/NOS_RAM.h ****     uint16_t totalSize;
  22:Core/Inc/NOS_RAM.h **** }NOS_RAM_Struct;
  23:Core/Inc/NOS_RAM.h **** 
  24:Core/Inc/NOS_RAM.h **** void NOS_RAM_Init(NOS_RAM_Struct* ram)
  25:Core/Inc/NOS_RAM.h **** {
 232              		.loc 2 25 1 is_stmt 1 view -0
 233              		.cfi_startproc
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 19


 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
  26:Core/Inc/NOS_RAM.h ****     for(int i = 0; i < RAM_CHUNK_MAX_COUNT; i++)
 237              		.loc 2 26 5 view .LVU54
 238              	.LBB8:
 239              		.loc 2 26 9 view .LVU55
 240              		.loc 2 26 13 is_stmt 0 view .LVU56
 241 0000 0023     		movs	r3, #0
 242              		.loc 2 26 5 view .LVU57
 243 0002 06E0     		b	.L10
 244              	.LVL10:
 245              	.L11:
  27:Core/Inc/NOS_RAM.h ****     {
  28:Core/Inc/NOS_RAM.h ****         ram->chunks[i].dataPtr = NULL;
 246              		.loc 2 28 9 is_stmt 1 discriminator 3 view .LVU58
 247              		.loc 2 28 32 is_stmt 0 discriminator 3 view .LVU59
 248 0004 0022     		movs	r2, #0
 249 0006 40F83320 		str	r2, [r0, r3, lsl #3]
  29:Core/Inc/NOS_RAM.h ****         ram->chunks[i].size = 0;
 250              		.loc 2 29 9 is_stmt 1 discriminator 3 view .LVU60
 251              		.loc 2 29 29 is_stmt 0 discriminator 3 view .LVU61
 252 000a 00EBC301 		add	r1, r0, r3, lsl #3
 253 000e 4A60     		str	r2, [r1, #4]
  26:Core/Inc/NOS_RAM.h ****     for(int i = 0; i < RAM_CHUNK_MAX_COUNT; i++)
 254              		.loc 2 26 46 is_stmt 1 discriminator 3 view .LVU62
 255 0010 0133     		adds	r3, r3, #1
 256              	.LVL11:
 257              	.L10:
  26:Core/Inc/NOS_RAM.h ****     for(int i = 0; i < RAM_CHUNK_MAX_COUNT; i++)
 258              		.loc 2 26 22 discriminator 1 view .LVU63
 259 0012 7F2B     		cmp	r3, #127
 260 0014 F6DD     		ble	.L11
 261              	.LBE8:
 262              	.LBB9:
  30:Core/Inc/NOS_RAM.h ****     }
  31:Core/Inc/NOS_RAM.h **** 
  32:Core/Inc/NOS_RAM.h ****     for(int i = 0; i < RAM_SIZE; i++)
 263              		.loc 2 32 13 is_stmt 0 view .LVU64
 264 0016 0023     		movs	r3, #0
 265              	.LVL12:
 266              		.loc 2 32 13 view .LVU65
 267 0018 04E0     		b	.L12
 268              	.LVL13:
 269              	.L13:
  33:Core/Inc/NOS_RAM.h ****     {
  34:Core/Inc/NOS_RAM.h ****         ram->data[i] = 0xFF;
 270              		.loc 2 34 9 is_stmt 1 discriminator 3 view .LVU66
 271              		.loc 2 34 22 is_stmt 0 discriminator 3 view .LVU67
 272 001a C218     		adds	r2, r0, r3
 273 001c FF21     		movs	r1, #255
 274 001e 82F80014 		strb	r1, [r2, #1024]
  32:Core/Inc/NOS_RAM.h ****     {
 275              		.loc 2 32 35 is_stmt 1 discriminator 3 view .LVU68
 276 0022 0133     		adds	r3, r3, #1
 277              	.LVL14:
 278              	.L12:
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 20


  32:Core/Inc/NOS_RAM.h ****     {
 279              		.loc 2 32 22 discriminator 1 view .LVU69
 280 0024 B3F5805F 		cmp	r3, #4096
 281 0028 F7DB     		blt	.L13
 282              	.LBE9:
  35:Core/Inc/NOS_RAM.h ****     }
  36:Core/Inc/NOS_RAM.h **** 
  37:Core/Inc/NOS_RAM.h ****     ram->topPointer = ram->data;
 283              		.loc 2 37 5 view .LVU70
 284              		.loc 2 37 23 is_stmt 0 view .LVU71
 285 002a 00F58063 		add	r3, r0, #1024
 286              	.LVL15:
 287              		.loc 2 37 21 view .LVU72
 288 002e 00F58050 		add	r0, r0, #4096
 289              	.LVL16:
 290              		.loc 2 37 21 view .LVU73
 291 0032 C0F80034 		str	r3, [r0, #1024]
  38:Core/Inc/NOS_RAM.h ****     ram->chunksCount = 0;
 292              		.loc 2 38 5 is_stmt 1 view .LVU74
 293              		.loc 2 38 22 is_stmt 0 view .LVU75
 294 0036 0023     		movs	r3, #0
 295 0038 80F80434 		strb	r3, [r0, #1028]
  39:Core/Inc/NOS_RAM.h ****     ram->totalSize = 0;
 296              		.loc 2 39 5 is_stmt 1 view .LVU76
 297              		.loc 2 39 20 is_stmt 0 view .LVU77
 298 003c A0F80634 		strh	r3, [r0, #1030]	@ movhi
  40:Core/Inc/NOS_RAM.h **** }
 299              		.loc 2 40 1 view .LVU78
 300 0040 7047     		bx	lr
 301              		.cfi_endproc
 302              	.LFE132:
 304              		.section	.text.NOS_RAM_Alloc,"ax",%progbits
 305              		.align	1
 306              		.global	NOS_RAM_Alloc
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 311              	NOS_RAM_Alloc:
 312              	.LVL17:
 313              	.LFB133:
  41:Core/Inc/NOS_RAM.h **** 
  42:Core/Inc/NOS_RAM.h **** void* NOS_RAM_Alloc(NOS_RAM_Struct* ram,size_t size)
  43:Core/Inc/NOS_RAM.h **** {
 314              		.loc 2 43 1 is_stmt 1 view -0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		.loc 2 43 1 is_stmt 0 view .LVU80
 319 0000 0246     		mov	r2, r0
  44:Core/Inc/NOS_RAM.h ****     void* result = NULL;
 320              		.loc 2 44 5 is_stmt 1 view .LVU81
 321              	.LVL18:
  45:Core/Inc/NOS_RAM.h **** 
  46:Core/Inc/NOS_RAM.h ****     if(ram->totalSize + size > RAM_SIZE)
 322              		.loc 2 46 5 view .LVU82
 323              		.loc 2 46 11 is_stmt 0 view .LVU83
 324 0002 00F58053 		add	r3, r0, #4096
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 21


 325 0006 B3F80634 		ldrh	r3, [r3, #1030]
 326              		.loc 2 46 23 view .LVU84
 327 000a 5818     		adds	r0, r3, r1
 328              	.LVL19:
 329              		.loc 2 46 7 view .LVU85
 330 000c B0F5805F 		cmp	r0, #4096
 331 0010 22D8     		bhi	.L18
  43:Core/Inc/NOS_RAM.h ****     void* result = NULL;
 332              		.loc 2 43 1 view .LVU86
 333 0012 00B5     		push	{lr}
 334              		.cfi_def_cfa_offset 4
 335              		.cfi_offset 14, -4
  47:Core/Inc/NOS_RAM.h ****     {
  48:Core/Inc/NOS_RAM.h ****         return NULL;
  49:Core/Inc/NOS_RAM.h ****     }
  50:Core/Inc/NOS_RAM.h **** 
  51:Core/Inc/NOS_RAM.h ****     uint16_t startPos = ram->totalSize;
 336              		.loc 2 51 5 is_stmt 1 view .LVU87
 337              	.LVL20:
  52:Core/Inc/NOS_RAM.h **** 
  53:Core/Inc/NOS_RAM.h ****     ram->totalSize += size;
 338              		.loc 2 53 5 view .LVU88
 339              		.loc 2 53 20 is_stmt 0 view .LVU89
 340 0014 1FFA80FC 		uxth	ip, r0
 341 0018 02F58050 		add	r0, r2, #4096
 342 001c A0F806C4 		strh	ip, [r0, #1030]	@ movhi
  54:Core/Inc/NOS_RAM.h **** 
  55:Core/Inc/NOS_RAM.h ****     for(int i = startPos; i < ram->totalSize; i++)
 343              		.loc 2 55 5 is_stmt 1 view .LVU90
 344              	.LBB10:
 345              		.loc 2 55 9 view .LVU91
 346              	.LVL21:
 347              		.loc 2 55 5 is_stmt 0 view .LVU92
 348 0020 05E0     		b	.L16
 349              	.LVL22:
 350              	.L17:
  56:Core/Inc/NOS_RAM.h ****     {
  57:Core/Inc/NOS_RAM.h ****         ram->data[i] = 0x00;
 351              		.loc 2 57 9 is_stmt 1 discriminator 3 view .LVU93
 352              		.loc 2 57 22 is_stmt 0 discriminator 3 view .LVU94
 353 0022 D018     		adds	r0, r2, r3
 354 0024 4FF0000E 		mov	lr, #0
 355 0028 80F800E4 		strb	lr, [r0, #1024]
  55:Core/Inc/NOS_RAM.h ****     {
 356              		.loc 2 55 48 is_stmt 1 discriminator 3 view .LVU95
 357 002c 0133     		adds	r3, r3, #1
 358              	.LVL23:
 359              	.L16:
  55:Core/Inc/NOS_RAM.h ****     {
 360              		.loc 2 55 29 discriminator 1 view .LVU96
 361 002e 9C45     		cmp	ip, r3
 362 0030 F7DC     		bgt	.L17
 363              	.LBE10:
  58:Core/Inc/NOS_RAM.h ****     }
  59:Core/Inc/NOS_RAM.h **** 
  60:Core/Inc/NOS_RAM.h ****     result = ram->topPointer;
 364              		.loc 2 60 5 view .LVU97
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 22


 365              		.loc 2 60 12 is_stmt 0 view .LVU98
 366 0032 02F5805E 		add	lr, r2, #4096
 367 0036 DEF80004 		ldr	r0, [lr, #1024]
 368              	.LVL24:
  61:Core/Inc/NOS_RAM.h **** 
  62:Core/Inc/NOS_RAM.h ****     ram->topPointer = &ram->data[ram->totalSize];
 369              		.loc 2 62 5 is_stmt 1 view .LVU99
 370              		.loc 2 62 23 is_stmt 0 view .LVU100
 371 003a 0CF5806C 		add	ip, ip, #1024
 372 003e 02EB0C03 		add	r3, r2, ip
 373              	.LVL25:
 374              		.loc 2 62 21 view .LVU101
 375 0042 CEF80034 		str	r3, [lr, #1024]
  63:Core/Inc/NOS_RAM.h **** 
  64:Core/Inc/NOS_RAM.h ****     ram->chunks[ram->chunksCount].dataPtr = result;
 376              		.loc 2 64 5 is_stmt 1 view .LVU102
 377              		.loc 2 64 20 is_stmt 0 view .LVU103
 378 0046 9EF80434 		ldrb	r3, [lr, #1028]	@ zero_extendqisi2
 379              		.loc 2 64 43 view .LVU104
 380 004a 42F83300 		str	r0, [r2, r3, lsl #3]
  65:Core/Inc/NOS_RAM.h ****     ram->chunks[ram->chunksCount].size = size;
 381              		.loc 2 65 5 is_stmt 1 view .LVU105
 382              		.loc 2 65 40 is_stmt 0 view .LVU106
 383 004e 02EBC302 		add	r2, r2, r3, lsl #3
 384              	.LVL26:
 385              		.loc 2 65 40 view .LVU107
 386 0052 5160     		str	r1, [r2, #4]
  66:Core/Inc/NOS_RAM.h **** 
  67:Core/Inc/NOS_RAM.h ****     return result;
 387              		.loc 2 67 5 is_stmt 1 view .LVU108
  68:Core/Inc/NOS_RAM.h **** }
 388              		.loc 2 68 1 is_stmt 0 view .LVU109
 389 0054 5DF804FB 		ldr	pc, [sp], #4
 390              	.LVL27:
 391              	.L18:
 392              		.cfi_def_cfa_offset 0
 393              		.cfi_restore 14
  48:Core/Inc/NOS_RAM.h ****     }
 394              		.loc 2 48 16 view .LVU110
 395 0058 0020     		movs	r0, #0
 396              		.loc 2 68 1 view .LVU111
 397 005a 7047     		bx	lr
 398              		.cfi_endproc
 399              	.LFE133:
 401              		.section	.text.NOS_RAM_Free,"ax",%progbits
 402              		.align	1
 403              		.global	NOS_RAM_Free
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 408              	NOS_RAM_Free:
 409              	.LVL28:
 410              	.LFB134:
  69:Core/Inc/NOS_RAM.h **** 
  70:Core/Inc/NOS_RAM.h **** void NOS_RAM_Free(NOS_RAM_Struct* ram, void* ptr)
  71:Core/Inc/NOS_RAM.h **** {
 411              		.loc 2 71 1 is_stmt 1 view -0
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 23


 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
  72:Core/Inc/NOS_RAM.h ****     for(int i = 0; i < ram->chunksCount; i++)
 416              		.loc 2 72 5 view .LVU113
 417              	.LBB11:
 418              		.loc 2 72 9 view .LVU114
 419              		.loc 2 72 13 is_stmt 0 view .LVU115
 420 0000 0023     		movs	r3, #0
 421              		.loc 2 72 5 view .LVU116
 422 0002 1EE0     		b	.L31
 423              	.LVL29:
 424              	.L27:
 425              		.cfi_def_cfa_offset 4
 426              		.cfi_offset 4, -4
 427              	.LBB12:
 428              	.LBB13:
  73:Core/Inc/NOS_RAM.h ****     {
  74:Core/Inc/NOS_RAM.h ****         if(ram->chunks[i].dataPtr == ptr)
  75:Core/Inc/NOS_RAM.h ****         {
  76:Core/Inc/NOS_RAM.h ****             uint8_t* dptr = (uint8_t*)ptr;
  77:Core/Inc/NOS_RAM.h ****             for(int x = 0; x < ram->chunks[i].size; x++)
  78:Core/Inc/NOS_RAM.h ****             {
  79:Core/Inc/NOS_RAM.h ****                 *dptr = 0xFF;
 429              		.loc 2 79 17 is_stmt 1 discriminator 3 view .LVU117
 430              		.loc 2 79 23 is_stmt 0 discriminator 3 view .LVU118
 431 0004 FF24     		movs	r4, #255
 432 0006 0CF8014B 		strb	r4, [ip], #1
 433              	.LVL30:
  80:Core/Inc/NOS_RAM.h ****                 dptr++;
 434              		.loc 2 80 17 is_stmt 1 discriminator 3 view .LVU119
  77:Core/Inc/NOS_RAM.h ****             {
 435              		.loc 2 77 54 discriminator 3 view .LVU120
 436 000a 0132     		adds	r2, r2, #1
 437              	.LVL31:
 438              	.L25:
  77:Core/Inc/NOS_RAM.h ****             {
 439              		.loc 2 77 30 discriminator 1 view .LVU121
  77:Core/Inc/NOS_RAM.h ****             {
 440              		.loc 2 77 46 is_stmt 0 discriminator 1 view .LVU122
 441 000c 00EBC304 		add	r4, r0, r3, lsl #3
 442 0010 6468     		ldr	r4, [r4, #4]
  77:Core/Inc/NOS_RAM.h ****             {
 443              		.loc 2 77 30 discriminator 1 view .LVU123
 444 0012 9442     		cmp	r4, r2
 445 0014 F6D8     		bhi	.L27
  77:Core/Inc/NOS_RAM.h ****             {
 446              		.loc 2 77 30 discriminator 1 view .LVU124
 447              	.LBE13:
  81:Core/Inc/NOS_RAM.h ****             }
  82:Core/Inc/NOS_RAM.h **** 
  83:Core/Inc/NOS_RAM.h ****             ram->chunks[i].dataPtr = NULL;
 448              		.loc 2 83 13 is_stmt 1 view .LVU125
 449              		.loc 2 83 36 is_stmt 0 view .LVU126
 450 0016 0022     		movs	r2, #0
 451              	.LVL32:
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 24


 452              		.loc 2 83 36 view .LVU127
 453 0018 40F83320 		str	r2, [r0, r3, lsl #3]
  84:Core/Inc/NOS_RAM.h ****             ram->chunks[i].size = 0;
 454              		.loc 2 84 13 is_stmt 1 view .LVU128
 455              		.loc 2 84 33 is_stmt 0 view .LVU129
 456 001c 00EBC304 		add	r4, r0, r3, lsl #3
 457 0020 6260     		str	r2, [r4, #4]
 458              	.L26:
 459              		.loc 2 84 33 view .LVU130
 460              	.LBE12:
  72:Core/Inc/NOS_RAM.h ****     {
 461              		.loc 2 72 43 is_stmt 1 discriminator 2 view .LVU131
 462 0022 0133     		adds	r3, r3, #1
 463              	.LVL33:
  72:Core/Inc/NOS_RAM.h ****     {
 464              		.loc 2 72 22 discriminator 2 view .LVU132
  72:Core/Inc/NOS_RAM.h ****     {
 465              		.loc 2 72 27 is_stmt 0 discriminator 2 view .LVU133
 466 0024 00F58052 		add	r2, r0, #4096
 467 0028 92F80424 		ldrb	r2, [r2, #1028]	@ zero_extendqisi2
  72:Core/Inc/NOS_RAM.h ****     {
 468              		.loc 2 72 22 discriminator 2 view .LVU134
 469 002c 9A42     		cmp	r2, r3
 470 002e 04DD     		ble	.L36
  74:Core/Inc/NOS_RAM.h ****         {
 471              		.loc 2 74 9 is_stmt 1 view .LVU135
  74:Core/Inc/NOS_RAM.h ****         {
 472              		.loc 2 74 26 is_stmt 0 view .LVU136
 473 0030 50F83320 		ldr	r2, [r0, r3, lsl #3]
  74:Core/Inc/NOS_RAM.h ****         {
 474              		.loc 2 74 11 view .LVU137
 475 0034 8A42     		cmp	r2, r1
 476 0036 F4D1     		bne	.L26
 477 0038 0EE0     		b	.L29
 478              	.L36:
  74:Core/Inc/NOS_RAM.h ****         {
 479              		.loc 2 74 11 view .LVU138
 480              	.LBE11:
  85:Core/Inc/NOS_RAM.h ****         }
  86:Core/Inc/NOS_RAM.h ****     }
  87:Core/Inc/NOS_RAM.h **** }...
 481              		.loc 2 87 1 view .LVU139
 482 003a 5DF8044B 		ldr	r4, [sp], #4
 483              		.cfi_restore 4
 484              		.cfi_def_cfa_offset 0
 485 003e 7047     		bx	lr
 486              	.LVL34:
 487              	.L38:
 488              	.LBB16:
  72:Core/Inc/NOS_RAM.h ****     for(int i = 0; i < ram->chunksCount; i++)
 489              		.loc 2 72 43 is_stmt 1 view .LVU140
 490 0040 0133     		adds	r3, r3, #1
 491              	.LVL35:
 492              	.L31:
  72:Core/Inc/NOS_RAM.h ****     for(int i = 0; i < ram->chunksCount; i++)
 493              		.loc 2 72 22 view .LVU141
  72:Core/Inc/NOS_RAM.h ****     for(int i = 0; i < ram->chunksCount; i++)
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 25


 494              		.loc 2 72 27 is_stmt 0 view .LVU142
 495 0042 00F58052 		add	r2, r0, #4096
 496 0046 92F80424 		ldrb	r2, [r2, #1028]	@ zero_extendqisi2
  72:Core/Inc/NOS_RAM.h ****     for(int i = 0; i < ram->chunksCount; i++)
 497              		.loc 2 72 22 view .LVU143
 498 004a 9A42     		cmp	r2, r3
 499 004c 07DD     		ble	.L37
  74:Core/Inc/NOS_RAM.h ****         {
 500              		.loc 2 74 9 is_stmt 1 view .LVU144
  74:Core/Inc/NOS_RAM.h ****         {
 501              		.loc 2 74 26 is_stmt 0 view .LVU145
 502 004e 50F83320 		ldr	r2, [r0, r3, lsl #3]
  74:Core/Inc/NOS_RAM.h ****         {
 503              		.loc 2 74 11 view .LVU146
 504 0052 8A42     		cmp	r2, r1
 505 0054 F4D1     		bne	.L38
 506              	.LBE16:
  71:Core/Inc/NOS_RAM.h **** {
 507              		.loc 2 71 1 view .LVU147
 508 0056 10B4     		push	{r4}
 509              		.cfi_def_cfa_offset 4
 510              		.cfi_offset 4, -4
 511              	.L29:
 512              	.LBB17:
 513              	.LBB15:
  76:Core/Inc/NOS_RAM.h ****             uint8_t* dptr = (uint8_t*)ptr;
 514              		.loc 2 76 22 view .LVU148
 515 0058 8C46     		mov	ip, r1
 516              	.LBB14:
  77:Core/Inc/NOS_RAM.h ****             for(int x = 0; x < ram->chunks[i].size; x++)
 517              		.loc 2 77 21 view .LVU149
 518 005a 0022     		movs	r2, #0
 519 005c D6E7     		b	.L25
 520              	.L37:
 521              		.cfi_def_cfa_offset 0
 522              		.cfi_restore 4
  77:Core/Inc/NOS_RAM.h ****             for(int x = 0; x < ram->chunks[i].size; x++)
 523              		.loc 2 77 21 view .LVU150
 524 005e 7047     		bx	lr
 525              	.LBE14:
 526              	.LBE15:
 527              	.LBE17:
 528              		.cfi_endproc
 529              	.LFE134:
 531              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 532              		.align	1
 533              		.global	HAL_UART_RxCpltCallback
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 538              	HAL_UART_RxCpltCallback:
 539              	.LVL36:
 540              	.LFB135:
 119:Core/Src/main.c ****   if(huart->Instance == USART2)
 541              		.loc 1 119 57 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 26


 544              		@ frame_needed = 0, uses_anonymous_args = 0
 119:Core/Src/main.c ****   if(huart->Instance == USART2)
 545              		.loc 1 119 57 is_stmt 0 view .LVU152
 546 0000 10B5     		push	{r4, lr}
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 4, -8
 549              		.cfi_offset 14, -4
 550 0002 0446     		mov	r4, r0
 120:Core/Src/main.c ****   {  
 551              		.loc 1 120 3 is_stmt 1 view .LVU153
 120:Core/Src/main.c ****   {  
 552              		.loc 1 120 11 is_stmt 0 view .LVU154
 553 0004 0268     		ldr	r2, [r0]
 120:Core/Src/main.c ****   {  
 554              		.loc 1 120 5 view .LVU155
 555 0006 0C4B     		ldr	r3, .L45
 556 0008 9A42     		cmp	r2, r3
 557 000a 04D0     		beq	.L43
 558              	.LVL37:
 559              	.L40:
 126:Core/Src/main.c ****   {
 560              		.loc 1 126 3 is_stmt 1 view .LVU156
 126:Core/Src/main.c ****   {
 561              		.loc 1 126 11 is_stmt 0 view .LVU157
 562 000c 2268     		ldr	r2, [r4]
 126:Core/Src/main.c ****   {
 563              		.loc 1 126 5 view .LVU158
 564 000e 0B4B     		ldr	r3, .L45+4
 565 0010 9A42     		cmp	r2, r3
 566 0012 08D0     		beq	.L44
 567              	.L39:
 131:Core/Src/main.c **** 
 568              		.loc 1 131 1 view .LVU159
 569 0014 10BD     		pop	{r4, pc}
 570              	.LVL38:
 571              	.L43:
 122:Core/Src/main.c ****     receive = true;
 572              		.loc 1 122 5 is_stmt 1 view .LVU160
 573 0016 0146     		mov	r1, r0
 574 0018 0948     		ldr	r0, .L45+8
 575              	.LVL39:
 122:Core/Src/main.c ****     receive = true;
 576              		.loc 1 122 5 is_stmt 0 view .LVU161
 577 001a FFF7FEFF 		bl	NOS_UART_ReceiveHandler
 578              	.LVL40:
 123:Core/Src/main.c ****   }
 579              		.loc 1 123 5 is_stmt 1 view .LVU162
 123:Core/Src/main.c ****   }
 580              		.loc 1 123 13 is_stmt 0 view .LVU163
 581 001e 094B     		ldr	r3, .L45+12
 582 0020 0122     		movs	r2, #1
 583 0022 1A70     		strb	r2, [r3]
 584 0024 F2E7     		b	.L40
 585              	.L44:
 128:Core/Src/main.c ****     receive = true;
 586              		.loc 1 128 5 is_stmt 1 view .LVU164
 587 0026 2146     		mov	r1, r4
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 27


 588 0028 0748     		ldr	r0, .L45+16
 589 002a FFF7FEFF 		bl	NOS_UART_ReceiveHandler
 590              	.LVL41:
 129:Core/Src/main.c ****   }
 591              		.loc 1 129 5 view .LVU165
 129:Core/Src/main.c ****   }
 592              		.loc 1 129 13 is_stmt 0 view .LVU166
 593 002e 054B     		ldr	r3, .L45+12
 594 0030 0122     		movs	r2, #1
 595 0032 1A70     		strb	r2, [r3]
 131:Core/Src/main.c **** 
 596              		.loc 1 131 1 view .LVU167
 597 0034 EEE7     		b	.L39
 598              	.L46:
 599 0036 00BF     		.align	2
 600              	.L45:
 601 0038 00440040 		.word	1073759232
 602 003c 00380140 		.word	1073821696
 603 0040 00000000 		.word	UART2
 604 0044 00000000 		.word	receive
 605 0048 00000000 		.word	UART1
 606              		.cfi_endproc
 607              	.LFE135:
 609              		.section	.text.Error_Handler,"ax",%progbits
 610              		.align	1
 611              		.global	Error_Handler
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
 616              	Error_Handler:
 617              	.LFB145:
 760:Core/Src/main.c **** 
 761:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 762:Core/Src/main.c **** 
 763:Core/Src/main.c **** /* USER CODE END 4 */
 764:Core/Src/main.c **** 
 765:Core/Src/main.c **** /**
 766:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 767:Core/Src/main.c ****   * @retval None
 768:Core/Src/main.c ****   */
 769:Core/Src/main.c **** void Error_Handler(void)
 770:Core/Src/main.c **** {
 618              		.loc 1 770 1 is_stmt 1 view -0
 619              		.cfi_startproc
 620              		@ Volatile: function does not return.
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 771:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 772:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 773:Core/Src/main.c ****   __disable_irq();
 624              		.loc 1 773 3 view .LVU169
 625              	.LBB18:
 626              	.LBI18:
 627              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 28


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 29


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 30


 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 31


 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 628              		.loc 3 207 27 view .LVU170
 629              	.LBB19:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 630              		.loc 3 209 3 view .LVU171
 631              		.syntax unified
 632              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 633 0000 72B6     		cpsid i
 634              	@ 0 "" 2
 635              		.thumb
 636              		.syntax unified
 637              	.L48:
 638              	.LBE19:
 639              	.LBE18:
 774:Core/Src/main.c ****   while (1)
 640              		.loc 1 774 3 discriminator 1 view .LVU172
 775:Core/Src/main.c ****   {
 776:Core/Src/main.c ****   }
 641              		.loc 1 776 3 discriminator 1 view .LVU173
 774:Core/Src/main.c ****   while (1)
 642              		.loc 1 774 9 discriminator 1 view .LVU174
 643 0002 FEE7     		b	.L48
 644              		.cfi_endproc
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 32


 645              	.LFE145:
 647              		.section	.text.MX_SPI2_Init,"ax",%progbits
 648              		.align	1
 649              		.syntax unified
 650              		.thumb
 651              		.thumb_func
 653              	MX_SPI2_Init:
 654              	.LFB138:
 475:Core/Src/main.c **** 
 655              		.loc 1 475 1 view -0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659 0000 08B5     		push	{r3, lr}
 660              		.cfi_def_cfa_offset 8
 661              		.cfi_offset 3, -8
 662              		.cfi_offset 14, -4
 485:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 663              		.loc 1 485 3 view .LVU176
 485:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 664              		.loc 1 485 18 is_stmt 0 view .LVU177
 665 0002 0F48     		ldr	r0, .L53
 666 0004 0F4B     		ldr	r3, .L53+4
 667 0006 0360     		str	r3, [r0]
 486:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 668              		.loc 1 486 3 is_stmt 1 view .LVU178
 486:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 669              		.loc 1 486 19 is_stmt 0 view .LVU179
 670 0008 4FF48273 		mov	r3, #260
 671 000c 4360     		str	r3, [r0, #4]
 487:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 672              		.loc 1 487 3 is_stmt 1 view .LVU180
 487:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 673              		.loc 1 487 24 is_stmt 0 view .LVU181
 674 000e 0023     		movs	r3, #0
 675 0010 8360     		str	r3, [r0, #8]
 488:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 676              		.loc 1 488 3 is_stmt 1 view .LVU182
 488:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 677              		.loc 1 488 23 is_stmt 0 view .LVU183
 678 0012 4FF44072 		mov	r2, #768
 679 0016 C260     		str	r2, [r0, #12]
 489:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 680              		.loc 1 489 3 is_stmt 1 view .LVU184
 489:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 681              		.loc 1 489 26 is_stmt 0 view .LVU185
 682 0018 0361     		str	r3, [r0, #16]
 490:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 683              		.loc 1 490 3 is_stmt 1 view .LVU186
 490:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 684              		.loc 1 490 23 is_stmt 0 view .LVU187
 685 001a 4361     		str	r3, [r0, #20]
 491:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 686              		.loc 1 491 3 is_stmt 1 view .LVU188
 491:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 687              		.loc 1 491 18 is_stmt 0 view .LVU189
 688 001c 4FF40072 		mov	r2, #512
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 33


 689 0020 8261     		str	r2, [r0, #24]
 492:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 690              		.loc 1 492 3 is_stmt 1 view .LVU190
 492:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 691              		.loc 1 492 32 is_stmt 0 view .LVU191
 692 0022 C361     		str	r3, [r0, #28]
 493:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 693              		.loc 1 493 3 is_stmt 1 view .LVU192
 493:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 694              		.loc 1 493 23 is_stmt 0 view .LVU193
 695 0024 0362     		str	r3, [r0, #32]
 494:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 696              		.loc 1 494 3 is_stmt 1 view .LVU194
 494:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 697              		.loc 1 494 21 is_stmt 0 view .LVU195
 698 0026 4362     		str	r3, [r0, #36]
 495:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 699              		.loc 1 495 3 is_stmt 1 view .LVU196
 495:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 700              		.loc 1 495 29 is_stmt 0 view .LVU197
 701 0028 8362     		str	r3, [r0, #40]
 496:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 702              		.loc 1 496 3 is_stmt 1 view .LVU198
 496:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 703              		.loc 1 496 28 is_stmt 0 view .LVU199
 704 002a 0722     		movs	r2, #7
 705 002c C262     		str	r2, [r0, #44]
 497:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 706              		.loc 1 497 3 is_stmt 1 view .LVU200
 497:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 707              		.loc 1 497 24 is_stmt 0 view .LVU201
 708 002e 0363     		str	r3, [r0, #48]
 498:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 709              		.loc 1 498 3 is_stmt 1 view .LVU202
 498:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 710              		.loc 1 498 23 is_stmt 0 view .LVU203
 711 0030 0823     		movs	r3, #8
 712 0032 4363     		str	r3, [r0, #52]
 499:Core/Src/main.c ****   {
 713              		.loc 1 499 3 is_stmt 1 view .LVU204
 499:Core/Src/main.c ****   {
 714              		.loc 1 499 7 is_stmt 0 view .LVU205
 715 0034 FFF7FEFF 		bl	HAL_SPI_Init
 716              	.LVL42:
 499:Core/Src/main.c ****   {
 717              		.loc 1 499 6 view .LVU206
 718 0038 00B9     		cbnz	r0, .L52
 507:Core/Src/main.c **** 
 719              		.loc 1 507 1 view .LVU207
 720 003a 08BD     		pop	{r3, pc}
 721              	.L52:
 501:Core/Src/main.c ****   }
 722              		.loc 1 501 5 is_stmt 1 view .LVU208
 723 003c FFF7FEFF 		bl	Error_Handler
 724              	.LVL43:
 725              	.L54:
 726              		.align	2
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 34


 727              	.L53:
 728 0040 00000000 		.word	hspi2
 729 0044 00380040 		.word	1073756160
 730              		.cfi_endproc
 731              	.LFE138:
 733              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 734              		.align	1
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 739              	MX_USART1_UART_Init:
 740              	.LFB141:
 636:Core/Src/main.c **** 
 741              		.loc 1 636 1 view -0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745 0000 08B5     		push	{r3, lr}
 746              		.cfi_def_cfa_offset 8
 747              		.cfi_offset 3, -8
 748              		.cfi_offset 14, -4
 645:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 749              		.loc 1 645 3 view .LVU210
 645:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 750              		.loc 1 645 19 is_stmt 0 view .LVU211
 751 0002 0B48     		ldr	r0, .L59
 752 0004 0B4B     		ldr	r3, .L59+4
 753 0006 0360     		str	r3, [r0]
 646:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 754              		.loc 1 646 3 is_stmt 1 view .LVU212
 646:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 755              		.loc 1 646 24 is_stmt 0 view .LVU213
 756 0008 4FF4E133 		mov	r3, #115200
 757 000c 4360     		str	r3, [r0, #4]
 647:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 758              		.loc 1 647 3 is_stmt 1 view .LVU214
 647:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 759              		.loc 1 647 26 is_stmt 0 view .LVU215
 760 000e 0023     		movs	r3, #0
 761 0010 8360     		str	r3, [r0, #8]
 648:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 762              		.loc 1 648 3 is_stmt 1 view .LVU216
 648:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 763              		.loc 1 648 24 is_stmt 0 view .LVU217
 764 0012 C360     		str	r3, [r0, #12]
 649:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 765              		.loc 1 649 3 is_stmt 1 view .LVU218
 649:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 766              		.loc 1 649 22 is_stmt 0 view .LVU219
 767 0014 0361     		str	r3, [r0, #16]
 650:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 768              		.loc 1 650 3 is_stmt 1 view .LVU220
 650:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 769              		.loc 1 650 20 is_stmt 0 view .LVU221
 770 0016 0C22     		movs	r2, #12
 771 0018 4261     		str	r2, [r0, #20]
 651:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 35


 772              		.loc 1 651 3 is_stmt 1 view .LVU222
 651:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 773              		.loc 1 651 25 is_stmt 0 view .LVU223
 774 001a 8361     		str	r3, [r0, #24]
 652:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 775              		.loc 1 652 3 is_stmt 1 view .LVU224
 652:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 776              		.loc 1 652 28 is_stmt 0 view .LVU225
 777 001c C361     		str	r3, [r0, #28]
 653:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 778              		.loc 1 653 3 is_stmt 1 view .LVU226
 653:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 779              		.loc 1 653 30 is_stmt 0 view .LVU227
 780 001e 0362     		str	r3, [r0, #32]
 654:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 781              		.loc 1 654 3 is_stmt 1 view .LVU228
 654:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 782              		.loc 1 654 38 is_stmt 0 view .LVU229
 783 0020 4362     		str	r3, [r0, #36]
 655:Core/Src/main.c ****   {
 784              		.loc 1 655 3 is_stmt 1 view .LVU230
 655:Core/Src/main.c ****   {
 785              		.loc 1 655 7 is_stmt 0 view .LVU231
 786 0022 FFF7FEFF 		bl	HAL_UART_Init
 787              	.LVL44:
 655:Core/Src/main.c ****   {
 788              		.loc 1 655 6 view .LVU232
 789 0026 00B9     		cbnz	r0, .L58
 663:Core/Src/main.c **** 
 790              		.loc 1 663 1 view .LVU233
 791 0028 08BD     		pop	{r3, pc}
 792              	.L58:
 657:Core/Src/main.c ****   }
 793              		.loc 1 657 5 is_stmt 1 view .LVU234
 794 002a FFF7FEFF 		bl	Error_Handler
 795              	.LVL45:
 796              	.L60:
 797 002e 00BF     		.align	2
 798              	.L59:
 799 0030 00000000 		.word	huart1
 800 0034 00380140 		.word	1073821696
 801              		.cfi_endproc
 802              	.LFE141:
 804              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 805              		.align	1
 806              		.syntax unified
 807              		.thumb
 808              		.thumb_func
 810              	MX_USART2_UART_Init:
 811              	.LFB142:
 671:Core/Src/main.c **** 
 812              		.loc 1 671 1 view -0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816 0000 08B5     		push	{r3, lr}
 817              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 36


 818              		.cfi_offset 3, -8
 819              		.cfi_offset 14, -4
 680:Core/Src/main.c ****   huart2.Init.BaudRate = 460800;
 820              		.loc 1 680 3 view .LVU236
 680:Core/Src/main.c ****   huart2.Init.BaudRate = 460800;
 821              		.loc 1 680 19 is_stmt 0 view .LVU237
 822 0002 0B48     		ldr	r0, .L65
 823 0004 0B4B     		ldr	r3, .L65+4
 824 0006 0360     		str	r3, [r0]
 681:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 825              		.loc 1 681 3 is_stmt 1 view .LVU238
 681:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 826              		.loc 1 681 24 is_stmt 0 view .LVU239
 827 0008 4FF4E123 		mov	r3, #460800
 828 000c 4360     		str	r3, [r0, #4]
 682:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 829              		.loc 1 682 3 is_stmt 1 view .LVU240
 682:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 830              		.loc 1 682 26 is_stmt 0 view .LVU241
 831 000e 0023     		movs	r3, #0
 832 0010 8360     		str	r3, [r0, #8]
 683:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 833              		.loc 1 683 3 is_stmt 1 view .LVU242
 683:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 834              		.loc 1 683 24 is_stmt 0 view .LVU243
 835 0012 C360     		str	r3, [r0, #12]
 684:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 836              		.loc 1 684 3 is_stmt 1 view .LVU244
 684:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 837              		.loc 1 684 22 is_stmt 0 view .LVU245
 838 0014 0361     		str	r3, [r0, #16]
 685:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 839              		.loc 1 685 3 is_stmt 1 view .LVU246
 685:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 840              		.loc 1 685 20 is_stmt 0 view .LVU247
 841 0016 0C22     		movs	r2, #12
 842 0018 4261     		str	r2, [r0, #20]
 686:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 843              		.loc 1 686 3 is_stmt 1 view .LVU248
 686:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 844              		.loc 1 686 25 is_stmt 0 view .LVU249
 845 001a 8361     		str	r3, [r0, #24]
 687:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 846              		.loc 1 687 3 is_stmt 1 view .LVU250
 687:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 847              		.loc 1 687 28 is_stmt 0 view .LVU251
 848 001c C361     		str	r3, [r0, #28]
 688:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 849              		.loc 1 688 3 is_stmt 1 view .LVU252
 688:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 850              		.loc 1 688 30 is_stmt 0 view .LVU253
 851 001e 0362     		str	r3, [r0, #32]
 689:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 852              		.loc 1 689 3 is_stmt 1 view .LVU254
 689:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 853              		.loc 1 689 38 is_stmt 0 view .LVU255
 854 0020 4362     		str	r3, [r0, #36]
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 37


 690:Core/Src/main.c ****   {
 855              		.loc 1 690 3 is_stmt 1 view .LVU256
 690:Core/Src/main.c ****   {
 856              		.loc 1 690 7 is_stmt 0 view .LVU257
 857 0022 FFF7FEFF 		bl	HAL_UART_Init
 858              	.LVL46:
 690:Core/Src/main.c ****   {
 859              		.loc 1 690 6 view .LVU258
 860 0026 00B9     		cbnz	r0, .L64
 698:Core/Src/main.c **** 
 861              		.loc 1 698 1 view .LVU259
 862 0028 08BD     		pop	{r3, pc}
 863              	.L64:
 692:Core/Src/main.c ****   }
 864              		.loc 1 692 5 is_stmt 1 view .LVU260
 865 002a FFF7FEFF 		bl	Error_Handler
 866              	.LVL47:
 867              	.L66:
 868 002e 00BF     		.align	2
 869              	.L65:
 870 0030 00000000 		.word	huart2
 871 0034 00440040 		.word	1073759232
 872              		.cfi_endproc
 873              	.LFE142:
 875              		.section	.text.MX_TIM2_Init,"ax",%progbits
 876              		.align	1
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 881              	MX_TIM2_Init:
 882              	.LFB140:
 584:Core/Src/main.c **** 
 883              		.loc 1 584 1 view -0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 40
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887 0000 00B5     		push	{lr}
 888              		.cfi_def_cfa_offset 4
 889              		.cfi_offset 14, -4
 890 0002 8BB0     		sub	sp, sp, #44
 891              		.cfi_def_cfa_offset 48
 590:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 892              		.loc 1 590 3 view .LVU262
 590:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 893              		.loc 1 590 27 is_stmt 0 view .LVU263
 894 0004 0023     		movs	r3, #0
 895 0006 0793     		str	r3, [sp, #28]
 896 0008 0893     		str	r3, [sp, #32]
 897 000a 0993     		str	r3, [sp, #36]
 591:Core/Src/main.c **** 
 898              		.loc 1 591 3 is_stmt 1 view .LVU264
 591:Core/Src/main.c **** 
 899              		.loc 1 591 22 is_stmt 0 view .LVU265
 900 000c 0093     		str	r3, [sp]
 901 000e 0193     		str	r3, [sp, #4]
 902 0010 0293     		str	r3, [sp, #8]
 903 0012 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 38


 904 0014 0493     		str	r3, [sp, #16]
 905 0016 0593     		str	r3, [sp, #20]
 906 0018 0693     		str	r3, [sp, #24]
 596:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 907              		.loc 1 596 3 is_stmt 1 view .LVU266
 596:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 908              		.loc 1 596 18 is_stmt 0 view .LVU267
 909 001a 1948     		ldr	r0, .L77
 910 001c 4FF08042 		mov	r2, #1073741824
 911 0020 0260     		str	r2, [r0]
 597:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 912              		.loc 1 597 3 is_stmt 1 view .LVU268
 597:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 913              		.loc 1 597 24 is_stmt 0 view .LVU269
 914 0022 4360     		str	r3, [r0, #4]
 598:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 915              		.loc 1 598 3 is_stmt 1 view .LVU270
 598:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 916              		.loc 1 598 26 is_stmt 0 view .LVU271
 917 0024 8360     		str	r3, [r0, #8]
 599:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 918              		.loc 1 599 3 is_stmt 1 view .LVU272
 599:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 919              		.loc 1 599 21 is_stmt 0 view .LVU273
 920 0026 4FF0FF32 		mov	r2, #-1
 921 002a C260     		str	r2, [r0, #12]
 600:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 922              		.loc 1 600 3 is_stmt 1 view .LVU274
 600:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 923              		.loc 1 600 28 is_stmt 0 view .LVU275
 924 002c 0361     		str	r3, [r0, #16]
 601:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 925              		.loc 1 601 3 is_stmt 1 view .LVU276
 601:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 926              		.loc 1 601 32 is_stmt 0 view .LVU277
 927 002e 8361     		str	r3, [r0, #24]
 602:Core/Src/main.c ****   {
 928              		.loc 1 602 3 is_stmt 1 view .LVU278
 602:Core/Src/main.c ****   {
 929              		.loc 1 602 7 is_stmt 0 view .LVU279
 930 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 931              	.LVL48:
 602:Core/Src/main.c ****   {
 932              		.loc 1 602 6 view .LVU280
 933 0034 D8B9     		cbnz	r0, .L73
 606:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 934              		.loc 1 606 3 is_stmt 1 view .LVU281
 606:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 935              		.loc 1 606 37 is_stmt 0 view .LVU282
 936 0036 0023     		movs	r3, #0
 937 0038 0793     		str	r3, [sp, #28]
 607:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 938              		.loc 1 607 3 is_stmt 1 view .LVU283
 607:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 939              		.loc 1 607 33 is_stmt 0 view .LVU284
 940 003a 0993     		str	r3, [sp, #36]
 608:Core/Src/main.c ****   {
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 39


 941              		.loc 1 608 3 is_stmt 1 view .LVU285
 608:Core/Src/main.c ****   {
 942              		.loc 1 608 7 is_stmt 0 view .LVU286
 943 003c 07A9     		add	r1, sp, #28
 944 003e 1048     		ldr	r0, .L77
 945 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 946              	.LVL49:
 608:Core/Src/main.c ****   {
 947              		.loc 1 608 6 view .LVU287
 948 0044 A8B9     		cbnz	r0, .L74
 612:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 949              		.loc 1 612 3 is_stmt 1 view .LVU288
 612:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 950              		.loc 1 612 20 is_stmt 0 view .LVU289
 951 0046 6023     		movs	r3, #96
 952 0048 0093     		str	r3, [sp]
 613:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 953              		.loc 1 613 3 is_stmt 1 view .LVU290
 613:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 954              		.loc 1 613 19 is_stmt 0 view .LVU291
 955 004a 0022     		movs	r2, #0
 956 004c 0192     		str	r2, [sp, #4]
 614:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 957              		.loc 1 614 3 is_stmt 1 view .LVU292
 614:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 958              		.loc 1 614 24 is_stmt 0 view .LVU293
 959 004e 0292     		str	r2, [sp, #8]
 615:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 960              		.loc 1 615 3 is_stmt 1 view .LVU294
 615:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 961              		.loc 1 615 24 is_stmt 0 view .LVU295
 962 0050 0492     		str	r2, [sp, #16]
 616:Core/Src/main.c ****   {
 963              		.loc 1 616 3 is_stmt 1 view .LVU296
 616:Core/Src/main.c ****   {
 964              		.loc 1 616 7 is_stmt 0 view .LVU297
 965 0052 6946     		mov	r1, sp
 966 0054 0A48     		ldr	r0, .L77
 967 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 968              	.LVL50:
 616:Core/Src/main.c ****   {
 969              		.loc 1 616 6 view .LVU298
 970 005a 60B9     		cbnz	r0, .L75
 620:Core/Src/main.c ****   {
 971              		.loc 1 620 3 is_stmt 1 view .LVU299
 620:Core/Src/main.c ****   {
 972              		.loc 1 620 7 is_stmt 0 view .LVU300
 973 005c 0422     		movs	r2, #4
 974 005e 6946     		mov	r1, sp
 975 0060 0748     		ldr	r0, .L77
 976 0062 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 977              	.LVL51:
 620:Core/Src/main.c ****   {
 978              		.loc 1 620 6 view .LVU301
 979 0066 40B9     		cbnz	r0, .L76
 628:Core/Src/main.c **** 
 980              		.loc 1 628 1 view .LVU302
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 40


 981 0068 0BB0     		add	sp, sp, #44
 982              		.cfi_remember_state
 983              		.cfi_def_cfa_offset 4
 984              		@ sp needed
 985 006a 5DF804FB 		ldr	pc, [sp], #4
 986              	.L73:
 987              		.cfi_restore_state
 604:Core/Src/main.c ****   }
 988              		.loc 1 604 5 is_stmt 1 view .LVU303
 989 006e FFF7FEFF 		bl	Error_Handler
 990              	.LVL52:
 991              	.L74:
 610:Core/Src/main.c ****   }
 992              		.loc 1 610 5 view .LVU304
 993 0072 FFF7FEFF 		bl	Error_Handler
 994              	.LVL53:
 995              	.L75:
 618:Core/Src/main.c ****   }
 996              		.loc 1 618 5 view .LVU305
 997 0076 FFF7FEFF 		bl	Error_Handler
 998              	.LVL54:
 999              	.L76:
 622:Core/Src/main.c ****   }
 1000              		.loc 1 622 5 view .LVU306
 1001 007a FFF7FEFF 		bl	Error_Handler
 1002              	.LVL55:
 1003              	.L78:
 1004 007e 00BF     		.align	2
 1005              	.L77:
 1006 0080 00000000 		.word	htim2
 1007              		.cfi_endproc
 1008              	.LFE140:
 1010              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1011              		.align	1
 1012              		.syntax unified
 1013              		.thumb
 1014              		.thumb_func
 1016              	MX_TIM1_Init:
 1017              	.LFB139:
 515:Core/Src/main.c **** 
 1018              		.loc 1 515 1 view -0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 88
 1021              		@ frame_needed = 0, uses_anonymous_args = 0
 1022 0000 10B5     		push	{r4, lr}
 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 4, -8
 1025              		.cfi_offset 14, -4
 1026 0002 96B0     		sub	sp, sp, #88
 1027              		.cfi_def_cfa_offset 96
 521:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1028              		.loc 1 521 3 view .LVU308
 521:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1029              		.loc 1 521 27 is_stmt 0 view .LVU309
 1030 0004 0024     		movs	r4, #0
 1031 0006 1394     		str	r4, [sp, #76]
 1032 0008 1494     		str	r4, [sp, #80]
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 41


 1033 000a 1594     		str	r4, [sp, #84]
 522:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1034              		.loc 1 522 3 is_stmt 1 view .LVU310
 522:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1035              		.loc 1 522 22 is_stmt 0 view .LVU311
 1036 000c 0C94     		str	r4, [sp, #48]
 1037 000e 0D94     		str	r4, [sp, #52]
 1038 0010 0E94     		str	r4, [sp, #56]
 1039 0012 0F94     		str	r4, [sp, #60]
 1040 0014 1094     		str	r4, [sp, #64]
 1041 0016 1194     		str	r4, [sp, #68]
 1042 0018 1294     		str	r4, [sp, #72]
 523:Core/Src/main.c **** 
 1043              		.loc 1 523 3 is_stmt 1 view .LVU312
 523:Core/Src/main.c **** 
 1044              		.loc 1 523 34 is_stmt 0 view .LVU313
 1045 001a 2C22     		movs	r2, #44
 1046 001c 2146     		mov	r1, r4
 1047 001e 01A8     		add	r0, sp, #4
 1048 0020 FFF7FEFF 		bl	memset
 1049              	.LVL56:
 528:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 1050              		.loc 1 528 3 is_stmt 1 view .LVU314
 528:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 1051              		.loc 1 528 18 is_stmt 0 view .LVU315
 1052 0024 2148     		ldr	r0, .L89
 1053 0026 224B     		ldr	r3, .L89+4
 1054 0028 0360     		str	r3, [r0]
 529:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1055              		.loc 1 529 3 is_stmt 1 view .LVU316
 529:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1056              		.loc 1 529 24 is_stmt 0 view .LVU317
 1057 002a 4460     		str	r4, [r0, #4]
 530:Core/Src/main.c ****   htim1.Init.Period = 65535;
 1058              		.loc 1 530 3 is_stmt 1 view .LVU318
 530:Core/Src/main.c ****   htim1.Init.Period = 65535;
 1059              		.loc 1 530 26 is_stmt 0 view .LVU319
 1060 002c 8460     		str	r4, [r0, #8]
 531:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1061              		.loc 1 531 3 is_stmt 1 view .LVU320
 531:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1062              		.loc 1 531 21 is_stmt 0 view .LVU321
 1063 002e 4FF6FF73 		movw	r3, #65535
 1064 0032 C360     		str	r3, [r0, #12]
 532:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1065              		.loc 1 532 3 is_stmt 1 view .LVU322
 532:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1066              		.loc 1 532 28 is_stmt 0 view .LVU323
 1067 0034 0461     		str	r4, [r0, #16]
 533:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1068              		.loc 1 533 3 is_stmt 1 view .LVU324
 533:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1069              		.loc 1 533 32 is_stmt 0 view .LVU325
 1070 0036 4461     		str	r4, [r0, #20]
 534:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim1) != HAL_OK)
 1071              		.loc 1 534 3 is_stmt 1 view .LVU326
 534:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim1) != HAL_OK)
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 42


 1072              		.loc 1 534 32 is_stmt 0 view .LVU327
 1073 0038 8461     		str	r4, [r0, #24]
 535:Core/Src/main.c ****   {
 1074              		.loc 1 535 3 is_stmt 1 view .LVU328
 535:Core/Src/main.c ****   {
 1075              		.loc 1 535 7 is_stmt 0 view .LVU329
 1076 003a FFF7FEFF 		bl	HAL_TIM_OC_Init
 1077              	.LVL57:
 535:Core/Src/main.c ****   {
 1078              		.loc 1 535 6 view .LVU330
 1079 003e 0028     		cmp	r0, #0
 1080 0040 2CD1     		bne	.L85
 539:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 1081              		.loc 1 539 3 is_stmt 1 view .LVU331
 539:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 1082              		.loc 1 539 37 is_stmt 0 view .LVU332
 1083 0042 0023     		movs	r3, #0
 1084 0044 1393     		str	r3, [sp, #76]
 540:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1085              		.loc 1 540 3 is_stmt 1 view .LVU333
 540:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1086              		.loc 1 540 38 is_stmt 0 view .LVU334
 1087 0046 1493     		str	r3, [sp, #80]
 541:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1088              		.loc 1 541 3 is_stmt 1 view .LVU335
 541:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1089              		.loc 1 541 33 is_stmt 0 view .LVU336
 1090 0048 1593     		str	r3, [sp, #84]
 542:Core/Src/main.c ****   {
 1091              		.loc 1 542 3 is_stmt 1 view .LVU337
 542:Core/Src/main.c ****   {
 1092              		.loc 1 542 7 is_stmt 0 view .LVU338
 1093 004a 13A9     		add	r1, sp, #76
 1094 004c 1748     		ldr	r0, .L89
 1095 004e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1096              	.LVL58:
 542:Core/Src/main.c ****   {
 1097              		.loc 1 542 6 view .LVU339
 1098 0052 28BB     		cbnz	r0, .L86
 546:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1099              		.loc 1 546 3 is_stmt 1 view .LVU340
 546:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1100              		.loc 1 546 20 is_stmt 0 view .LVU341
 1101 0054 0022     		movs	r2, #0
 1102 0056 0C92     		str	r2, [sp, #48]
 547:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1103              		.loc 1 547 3 is_stmt 1 view .LVU342
 547:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1104              		.loc 1 547 19 is_stmt 0 view .LVU343
 1105 0058 0D92     		str	r2, [sp, #52]
 548:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1106              		.loc 1 548 3 is_stmt 1 view .LVU344
 548:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1107              		.loc 1 548 24 is_stmt 0 view .LVU345
 1108 005a 0E92     		str	r2, [sp, #56]
 549:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1109              		.loc 1 549 3 is_stmt 1 view .LVU346
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 43


 549:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1110              		.loc 1 549 25 is_stmt 0 view .LVU347
 1111 005c 0F92     		str	r2, [sp, #60]
 550:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1112              		.loc 1 550 3 is_stmt 1 view .LVU348
 550:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1113              		.loc 1 550 24 is_stmt 0 view .LVU349
 1114 005e 1092     		str	r2, [sp, #64]
 551:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1115              		.loc 1 551 3 is_stmt 1 view .LVU350
 551:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1116              		.loc 1 551 25 is_stmt 0 view .LVU351
 1117 0060 1192     		str	r2, [sp, #68]
 552:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1118              		.loc 1 552 3 is_stmt 1 view .LVU352
 552:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1119              		.loc 1 552 26 is_stmt 0 view .LVU353
 1120 0062 1292     		str	r2, [sp, #72]
 553:Core/Src/main.c ****   {
 1121              		.loc 1 553 3 is_stmt 1 view .LVU354
 553:Core/Src/main.c ****   {
 1122              		.loc 1 553 7 is_stmt 0 view .LVU355
 1123 0064 0CA9     		add	r1, sp, #48
 1124 0066 1148     		ldr	r0, .L89
 1125 0068 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 1126              	.LVL59:
 553:Core/Src/main.c ****   {
 1127              		.loc 1 553 6 view .LVU356
 1128 006c D0B9     		cbnz	r0, .L87
 557:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1129              		.loc 1 557 3 is_stmt 1 view .LVU357
 557:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1130              		.loc 1 557 40 is_stmt 0 view .LVU358
 1131 006e 0023     		movs	r3, #0
 1132 0070 0193     		str	r3, [sp, #4]
 558:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1133              		.loc 1 558 3 is_stmt 1 view .LVU359
 558:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1134              		.loc 1 558 41 is_stmt 0 view .LVU360
 1135 0072 0293     		str	r3, [sp, #8]
 559:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1136              		.loc 1 559 3 is_stmt 1 view .LVU361
 559:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1137              		.loc 1 559 34 is_stmt 0 view .LVU362
 1138 0074 0393     		str	r3, [sp, #12]
 560:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1139              		.loc 1 560 3 is_stmt 1 view .LVU363
 560:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1140              		.loc 1 560 33 is_stmt 0 view .LVU364
 1141 0076 0493     		str	r3, [sp, #16]
 561:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1142              		.loc 1 561 3 is_stmt 1 view .LVU365
 561:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1143              		.loc 1 561 35 is_stmt 0 view .LVU366
 1144 0078 0593     		str	r3, [sp, #20]
 562:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1145              		.loc 1 562 3 is_stmt 1 view .LVU367
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 44


 562:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1146              		.loc 1 562 38 is_stmt 0 view .LVU368
 1147 007a 4FF40052 		mov	r2, #8192
 1148 007e 0692     		str	r2, [sp, #24]
 563:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 1149              		.loc 1 563 3 is_stmt 1 view .LVU369
 563:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 1150              		.loc 1 563 36 is_stmt 0 view .LVU370
 1151 0080 0793     		str	r3, [sp, #28]
 564:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 1152              		.loc 1 564 3 is_stmt 1 view .LVU371
 564:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 1153              		.loc 1 564 36 is_stmt 0 view .LVU372
 1154 0082 0893     		str	r3, [sp, #32]
 565:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 1155              		.loc 1 565 3 is_stmt 1 view .LVU373
 565:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 1156              		.loc 1 565 39 is_stmt 0 view .LVU374
 1157 0084 4FF00072 		mov	r2, #33554432
 1158 0088 0992     		str	r2, [sp, #36]
 566:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1159              		.loc 1 566 3 is_stmt 1 view .LVU375
 566:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1160              		.loc 1 566 37 is_stmt 0 view .LVU376
 1161 008a 0A93     		str	r3, [sp, #40]
 567:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1162              		.loc 1 567 3 is_stmt 1 view .LVU377
 567:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1163              		.loc 1 567 40 is_stmt 0 view .LVU378
 1164 008c 0B93     		str	r3, [sp, #44]
 568:Core/Src/main.c ****   {
 1165              		.loc 1 568 3 is_stmt 1 view .LVU379
 568:Core/Src/main.c ****   {
 1166              		.loc 1 568 7 is_stmt 0 view .LVU380
 1167 008e 01A9     		add	r1, sp, #4
 1168 0090 0648     		ldr	r0, .L89
 1169 0092 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1170              	.LVL60:
 568:Core/Src/main.c ****   {
 1171              		.loc 1 568 6 view .LVU381
 1172 0096 38B9     		cbnz	r0, .L88
 576:Core/Src/main.c **** 
 1173              		.loc 1 576 1 view .LVU382
 1174 0098 16B0     		add	sp, sp, #88
 1175              		.cfi_remember_state
 1176              		.cfi_def_cfa_offset 8
 1177              		@ sp needed
 1178 009a 10BD     		pop	{r4, pc}
 1179              	.L85:
 1180              		.cfi_restore_state
 537:Core/Src/main.c ****   }
 1181              		.loc 1 537 5 is_stmt 1 view .LVU383
 1182 009c FFF7FEFF 		bl	Error_Handler
 1183              	.LVL61:
 1184              	.L86:
 544:Core/Src/main.c ****   }
 1185              		.loc 1 544 5 view .LVU384
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 45


 1186 00a0 FFF7FEFF 		bl	Error_Handler
 1187              	.LVL62:
 1188              	.L87:
 555:Core/Src/main.c ****   }
 1189              		.loc 1 555 5 view .LVU385
 1190 00a4 FFF7FEFF 		bl	Error_Handler
 1191              	.LVL63:
 1192              	.L88:
 570:Core/Src/main.c ****   }
 1193              		.loc 1 570 5 view .LVU386
 1194 00a8 FFF7FEFF 		bl	Error_Handler
 1195              	.LVL64:
 1196              	.L90:
 1197              		.align	2
 1198              	.L89:
 1199 00ac 00000000 		.word	htim1
 1200 00b0 002C0140 		.word	1073818624
 1201              		.cfi_endproc
 1202              	.LFE139:
 1204              		.section	.text.SystemClock_Config,"ax",%progbits
 1205              		.align	1
 1206              		.global	SystemClock_Config
 1207              		.syntax unified
 1208              		.thumb
 1209              		.thumb_func
 1211              	SystemClock_Config:
 1212              	.LFB137:
 425:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1213              		.loc 1 425 1 view -0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 88
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217 0000 00B5     		push	{lr}
 1218              		.cfi_def_cfa_offset 4
 1219              		.cfi_offset 14, -4
 1220 0002 97B0     		sub	sp, sp, #92
 1221              		.cfi_def_cfa_offset 96
 426:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1222              		.loc 1 426 3 view .LVU388
 426:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1223              		.loc 1 426 22 is_stmt 0 view .LVU389
 1224 0004 4422     		movs	r2, #68
 1225 0006 0021     		movs	r1, #0
 1226 0008 05A8     		add	r0, sp, #20
 1227 000a FFF7FEFF 		bl	memset
 1228              	.LVL65:
 427:Core/Src/main.c **** 
 1229              		.loc 1 427 3 is_stmt 1 view .LVU390
 427:Core/Src/main.c **** 
 1230              		.loc 1 427 22 is_stmt 0 view .LVU391
 1231 000e 0023     		movs	r3, #0
 1232 0010 0093     		str	r3, [sp]
 1233 0012 0193     		str	r3, [sp, #4]
 1234 0014 0293     		str	r3, [sp, #8]
 1235 0016 0393     		str	r3, [sp, #12]
 1236 0018 0493     		str	r3, [sp, #16]
 431:Core/Src/main.c ****   {
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 46


 1237              		.loc 1 431 3 is_stmt 1 view .LVU392
 431:Core/Src/main.c ****   {
 1238              		.loc 1 431 7 is_stmt 0 view .LVU393
 1239 001a 4FF40070 		mov	r0, #512
 1240 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 1241              	.LVL66:
 431:Core/Src/main.c ****   {
 1242              		.loc 1 431 6 view .LVU394
 1243 0022 18BB     		cbnz	r0, .L96
 439:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1244              		.loc 1 439 3 is_stmt 1 view .LVU395
 439:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1245              		.loc 1 439 36 is_stmt 0 view .LVU396
 1246 0024 0223     		movs	r3, #2
 1247 0026 0593     		str	r3, [sp, #20]
 440:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1248              		.loc 1 440 3 is_stmt 1 view .LVU397
 440:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1249              		.loc 1 440 30 is_stmt 0 view .LVU398
 1250 0028 4FF48072 		mov	r2, #256
 1251 002c 0892     		str	r2, [sp, #32]
 441:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1252              		.loc 1 441 3 is_stmt 1 view .LVU399
 441:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1253              		.loc 1 441 41 is_stmt 0 view .LVU400
 1254 002e 1022     		movs	r2, #16
 1255 0030 0992     		str	r2, [sp, #36]
 442:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1256              		.loc 1 442 3 is_stmt 1 view .LVU401
 442:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1257              		.loc 1 442 34 is_stmt 0 view .LVU402
 1258 0032 0F93     		str	r3, [sp, #60]
 443:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 1259              		.loc 1 443 3 is_stmt 1 view .LVU403
 443:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 1260              		.loc 1 443 35 is_stmt 0 view .LVU404
 1261 0034 1093     		str	r3, [sp, #64]
 444:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 8;
 1262              		.loc 1 444 3 is_stmt 1 view .LVU405
 444:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 8;
 1263              		.loc 1 444 30 is_stmt 0 view .LVU406
 1264 0036 0122     		movs	r2, #1
 1265 0038 1192     		str	r2, [sp, #68]
 445:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 1266              		.loc 1 445 3 is_stmt 1 view .LVU407
 445:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 1267              		.loc 1 445 30 is_stmt 0 view .LVU408
 1268 003a 0822     		movs	r2, #8
 1269 003c 1292     		str	r2, [sp, #72]
 446:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 1270              		.loc 1 446 3 is_stmt 1 view .LVU409
 446:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 1271              		.loc 1 446 30 is_stmt 0 view .LVU410
 1272 003e 0722     		movs	r2, #7
 1273 0040 1392     		str	r2, [sp, #76]
 447:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 1274              		.loc 1 447 3 is_stmt 1 view .LVU411
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 47


 447:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 1275              		.loc 1 447 30 is_stmt 0 view .LVU412
 1276 0042 1493     		str	r3, [sp, #80]
 448:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1277              		.loc 1 448 3 is_stmt 1 view .LVU413
 448:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1278              		.loc 1 448 30 is_stmt 0 view .LVU414
 1279 0044 1593     		str	r3, [sp, #84]
 449:Core/Src/main.c ****   {
 1280              		.loc 1 449 3 is_stmt 1 view .LVU415
 449:Core/Src/main.c ****   {
 1281              		.loc 1 449 7 is_stmt 0 view .LVU416
 1282 0046 05A8     		add	r0, sp, #20
 1283 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1284              	.LVL67:
 449:Core/Src/main.c ****   {
 1285              		.loc 1 449 6 view .LVU417
 1286 004c 80B9     		cbnz	r0, .L97
 456:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1287              		.loc 1 456 3 is_stmt 1 view .LVU418
 456:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1288              		.loc 1 456 31 is_stmt 0 view .LVU419
 1289 004e 0F23     		movs	r3, #15
 1290 0050 0093     		str	r3, [sp]
 458:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1291              		.loc 1 458 3 is_stmt 1 view .LVU420
 458:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1292              		.loc 1 458 34 is_stmt 0 view .LVU421
 1293 0052 0321     		movs	r1, #3
 1294 0054 0191     		str	r1, [sp, #4]
 459:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1295              		.loc 1 459 3 is_stmt 1 view .LVU422
 459:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1296              		.loc 1 459 35 is_stmt 0 view .LVU423
 1297 0056 0023     		movs	r3, #0
 1298 0058 0293     		str	r3, [sp, #8]
 460:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1299              		.loc 1 460 3 is_stmt 1 view .LVU424
 460:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1300              		.loc 1 460 36 is_stmt 0 view .LVU425
 1301 005a 0393     		str	r3, [sp, #12]
 461:Core/Src/main.c **** 
 1302              		.loc 1 461 3 is_stmt 1 view .LVU426
 461:Core/Src/main.c **** 
 1303              		.loc 1 461 36 is_stmt 0 view .LVU427
 1304 005c 0493     		str	r3, [sp, #16]
 463:Core/Src/main.c ****   {
 1305              		.loc 1 463 3 is_stmt 1 view .LVU428
 463:Core/Src/main.c ****   {
 1306              		.loc 1 463 7 is_stmt 0 view .LVU429
 1307 005e 6846     		mov	r0, sp
 1308 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1309              	.LVL68:
 463:Core/Src/main.c ****   {
 1310              		.loc 1 463 6 view .LVU430
 1311 0064 30B9     		cbnz	r0, .L98
 467:Core/Src/main.c **** 
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 48


 1312              		.loc 1 467 1 view .LVU431
 1313 0066 17B0     		add	sp, sp, #92
 1314              		.cfi_remember_state
 1315              		.cfi_def_cfa_offset 4
 1316              		@ sp needed
 1317 0068 5DF804FB 		ldr	pc, [sp], #4
 1318              	.L96:
 1319              		.cfi_restore_state
 433:Core/Src/main.c ****   }
 1320              		.loc 1 433 5 is_stmt 1 view .LVU432
 1321 006c FFF7FEFF 		bl	Error_Handler
 1322              	.LVL69:
 1323              	.L97:
 451:Core/Src/main.c ****   }
 1324              		.loc 1 451 5 view .LVU433
 1325 0070 FFF7FEFF 		bl	Error_Handler
 1326              	.LVL70:
 1327              	.L98:
 465:Core/Src/main.c ****   }
 1328              		.loc 1 465 5 view .LVU434
 1329 0074 FFF7FEFF 		bl	Error_Handler
 1330              	.LVL71:
 1331              		.cfi_endproc
 1332              	.LFE137:
 1334              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1335              		.align	2
 1336              	.LC0:
 1337 0000 48454C4C 		.ascii	"HELLO\000"
 1337      4F00
 1338 0006 0000     		.align	2
 1339              	.LC1:
 1340 0008 262F4272 		.ascii	"&/Breathe/70/80/20/true/&/Rainbow/#0000ff/#7f00ff/6"
 1340      65617468 
 1340      652F3730 
 1340      2F38302F 
 1340      32302F74 
 1341 003b 302F6661 		.ascii	"0/false/&/Dots/#ffff00/60/true/&/Walking/#ffff00/5/"
 1341      6C73652F 
 1341      262F446F 
 1341      74732F23 
 1341      66666666 
 1342 006e 37302F66 		.ascii	"70/false/&/Steady/#00ff00/false/&\000"
 1342      616C7365 
 1342      2F262F53 
 1342      74656164 
 1342      792F2330 
 1343              		.section	.text.main,"ax",%progbits
 1344              		.align	1
 1345              		.global	main
 1346              		.syntax unified
 1347              		.thumb
 1348              		.thumb_func
 1350              	main:
 1351              	.LFB136:
 144:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1352              		.loc 1 144 1 view -0
 1353              		.cfi_startproc
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 49


 1354              		@ Volatile: function does not return.
 1355              		@ args = 0, pretend = 0, frame = 0
 1356              		@ frame_needed = 0, uses_anonymous_args = 0
 1357 0000 2DE98048 		push	{r7, fp, lr}
 1358              		.cfi_def_cfa_offset 12
 1359              		.cfi_offset 7, -12
 1360              		.cfi_offset 11, -8
 1361              		.cfi_offset 14, -4
 1362 0004 89B0     		sub	sp, sp, #36
 1363              		.cfi_def_cfa_offset 48
 152:Core/Src/main.c **** 
 1364              		.loc 1 152 3 view .LVU436
 1365 0006 FFF7FEFF 		bl	HAL_Init
 1366              	.LVL72:
 159:Core/Src/main.c **** 
 1367              		.loc 1 159 3 view .LVU437
 1368 000a FFF7FEFF 		bl	SystemClock_Config
 1369              	.LVL73:
 166:Core/Src/main.c ****   MX_DMA_Init();
 1370              		.loc 1 166 3 view .LVU438
 1371 000e FFF7FEFF 		bl	MX_GPIO_Init
 1372              	.LVL74:
 167:Core/Src/main.c ****   MX_SPI2_Init();
 1373              		.loc 1 167 3 view .LVU439
 1374 0012 FFF7FEFF 		bl	MX_DMA_Init
 1375              	.LVL75:
 168:Core/Src/main.c ****   MX_USART1_UART_Init();
 1376              		.loc 1 168 3 view .LVU440
 1377 0016 FFF7FEFF 		bl	MX_SPI2_Init
 1378              	.LVL76:
 169:Core/Src/main.c ****   MX_USART2_UART_Init();
 1379              		.loc 1 169 3 view .LVU441
 1380 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 1381              	.LVL77:
 170:Core/Src/main.c ****   MX_TIM2_Init();
 1382              		.loc 1 170 3 view .LVU442
 1383 001e FFF7FEFF 		bl	MX_USART2_UART_Init
 1384              	.LVL78:
 171:Core/Src/main.c ****   MX_TIM1_Init();
 1385              		.loc 1 171 3 view .LVU443
 1386 0022 FFF7FEFF 		bl	MX_TIM2_Init
 1387              	.LVL79:
 172:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1388              		.loc 1 172 3 view .LVU444
 1389 0026 FFF7FEFF 		bl	MX_TIM1_Init
 1390              	.LVL80:
 174:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2,UART2.rx_buff,1);
 1391              		.loc 1 174 3 view .LVU445
 1392 002a D04E     		ldr	r6, .L119
 1393 002c D04C     		ldr	r4, .L119+4
 1394 002e 0122     		movs	r2, #1
 1395 0030 3146     		mov	r1, r6
 1396 0032 2046     		mov	r0, r4
 1397 0034 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1398              	.LVL81:
 175:Core/Src/main.c **** 
 1399              		.loc 1 175 3 view .LVU446
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 50


 1400 0038 DFF88093 		ldr	r9, .L119+80
 1401 003c CD4D     		ldr	r5, .L119+8
 1402 003e 0122     		movs	r2, #1
 1403 0040 4946     		mov	r1, r9
 1404 0042 2846     		mov	r0, r5
 1405 0044 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1406              	.LVL82:
 177:Core/Src/main.c ****   HAL_UART_Transmit(&huart2,"HELLO",sizeof("HELLO"),1000);
 1407              		.loc 1 177 3 view .LVU447
 1408 0048 CB4F     		ldr	r7, .L119+12
 1409 004a 4FF47A73 		mov	r3, #1000
 1410 004e 0622     		movs	r2, #6
 1411 0050 3946     		mov	r1, r7
 1412 0052 2046     		mov	r0, r4
 1413 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 1414              	.LVL83:
 178:Core/Src/main.c **** 
 1415              		.loc 1 178 3 view .LVU448
 1416 0058 4FF47A73 		mov	r3, #1000
 1417 005c 0622     		movs	r2, #6
 1418 005e 3946     		mov	r1, r7
 1419 0060 2846     		mov	r0, r5
 1420 0062 FFF7FEFF 		bl	HAL_UART_Transmit
 1421              	.LVL84:
 180:Core/Src/main.c **** 
 1422              		.loc 1 180 3 view .LVU449
 1423 0066 FFF7FEFF 		bl	visInit
 1424              	.LVL85:
 182:Core/Src/main.c ****   NOS_WS2812B_Strip_FullInit(&stripB,&frameBufferB,&pixelsB,128);
 1425              		.loc 1 182 3 view .LVU450
 1426 006a DFF85483 		ldr	r8, .L119+84
 1427 006e 8023     		movs	r3, #128
 1428 0070 C24A     		ldr	r2, .L119+16
 1429 0072 C349     		ldr	r1, .L119+20
 1430 0074 4046     		mov	r0, r8
 1431 0076 FFF7FEFF 		bl	NOS_WS2812B_Strip_FullInit
 1432              	.LVL86:
 183:Core/Src/main.c ****   NOS_WS2812B_Strip_FullInit(&stripC,&frameBufferC,&pixelsC,128);
 1433              		.loc 1 183 3 view .LVU451
 1434 007a 8023     		movs	r3, #128
 1435 007c C14A     		ldr	r2, .L119+24
 1436 007e C249     		ldr	r1, .L119+28
 1437 0080 C248     		ldr	r0, .L119+32
 1438 0082 FFF7FEFF 		bl	NOS_WS2812B_Strip_FullInit
 1439              	.LVL87:
 184:Core/Src/main.c ****   NOS_WS2812B_Strip_FullInit(&stripD,&frameBufferD,&pixelsD,128);
 1440              		.loc 1 184 3 view .LVU452
 1441 0086 DFF83CA3 		ldr	r10, .L119+88
 1442 008a 8023     		movs	r3, #128
 1443 008c C04A     		ldr	r2, .L119+36
 1444 008e C149     		ldr	r1, .L119+40
 1445 0090 5046     		mov	r0, r10
 1446 0092 FFF7FEFF 		bl	NOS_WS2812B_Strip_FullInit
 1447              	.LVL88:
 185:Core/Src/main.c **** 
 1448              		.loc 1 185 3 view .LVU453
 1449 0096 8023     		movs	r3, #128
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 51


 1450 0098 BF4A     		ldr	r2, .L119+44
 1451 009a C049     		ldr	r1, .L119+48
 1452 009c C048     		ldr	r0, .L119+52
 1453 009e FFF7FEFF 		bl	NOS_WS2812B_Strip_FullInit
 1454              	.LVL89:
 187:Core/Src/main.c **** 
 1455              		.loc 1 187 3 view .LVU454
 1456 00a2 1421     		movs	r1, #20
 1457 00a4 BF48     		ldr	r0, .L119+56
 1458 00a6 FFF7FEFF 		bl	NOS_TimeEvent_Init
 1459              	.LVL90:
 189:Core/Src/main.c ****   NOS_UART_ReceiveAbort(&UART1,&huart1);
 1460              		.loc 1 189 3 view .LVU455
 1461 00aa 2946     		mov	r1, r5
 1462 00ac A9F50570 		sub	r0, r9, #532
 1463 00b0 FFF7FEFF 		bl	NOS_UART_ReceiveAbort
 1464              	.LVL91:
 190:Core/Src/main.c **** 
 1465              		.loc 1 190 3 view .LVU456
 1466 00b4 2146     		mov	r1, r4
 1467 00b6 A6F50570 		sub	r0, r6, #532
 1468 00ba FFF7FEFF 		bl	NOS_UART_ReceiveAbort
 1469              	.LVL92:
 226:Core/Src/main.c ****   NOS_WS2812B_Strip_Effect_Init(&rainbowA,&nullColor,1000,1,200,800,0,0,0,0,EFFECT_RAINBOW_ID,false
 1470              		.loc 1 226 3 view .LVU457
 1471 00be BA4F     		ldr	r7, .L119+60
 1472 00c0 BA4E     		ldr	r6, .L119+64
 1473 00c2 4FF00109 		mov	r9, #1
 1474 00c6 CDF81C90 		str	r9, [sp, #28]
 1475 00ca 2023     		movs	r3, #32
 1476 00cc 0693     		str	r3, [sp, #24]
 1477 00ce 0024     		movs	r4, #0
 1478 00d0 0594     		str	r4, [sp, #20]
 1479 00d2 0494     		str	r4, [sp, #16]
 1480 00d4 0394     		str	r4, [sp, #12]
 1481 00d6 0294     		str	r4, [sp, #8]
 1482 00d8 3C23     		movs	r3, #60
 1483 00da 0193     		str	r3, [sp, #4]
 1484 00dc 4FF0280B 		mov	fp, #40
 1485 00e0 CDF800B0 		str	fp, [sp]
 1486 00e4 4B46     		mov	r3, r9
 1487 00e6 1422     		movs	r2, #20
 1488 00e8 3946     		mov	r1, r7
 1489 00ea 3046     		mov	r0, r6
 1490 00ec FFF7FEFF 		bl	NOS_WS2812B_Strip_Effect_Init
 1491              	.LVL93:
 227:Core/Src/main.c ****   NOS_WS2812B_Strip_Effect_Init(&dotsA,&white,40,1,0,100,0,0,0,0,EFFECT_DOTS_ID,false);
 1492              		.loc 1 227 3 view .LVU458
 1493 00f0 AF4D     		ldr	r5, .L119+68
 1494 00f2 0794     		str	r4, [sp, #28]
 1495 00f4 2123     		movs	r3, #33
 1496 00f6 0693     		str	r3, [sp, #24]
 1497 00f8 0594     		str	r4, [sp, #20]
 1498 00fa 0494     		str	r4, [sp, #16]
 1499 00fc 0394     		str	r4, [sp, #12]
 1500 00fe 0294     		str	r4, [sp, #8]
 1501 0100 4FF44873 		mov	r3, #800
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 52


 1502 0104 0193     		str	r3, [sp, #4]
 1503 0106 C823     		movs	r3, #200
 1504 0108 0093     		str	r3, [sp]
 1505 010a 4B46     		mov	r3, r9
 1506 010c 4FF47A72 		mov	r2, #1000
 1507 0110 3946     		mov	r1, r7
 1508 0112 2846     		mov	r0, r5
 1509 0114 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effect_Init
 1510              	.LVL94:
 228:Core/Src/main.c ****   NOS_WS2812B_Strip_Effect_Init(&walkingPixelA,&white,100,1,0,48,3,0,0,0,EFFECT_WALKING_PIXELS_ID,f
 1511              		.loc 1 228 3 view .LVU459
 1512 0118 A64F     		ldr	r7, .L119+72
 1513 011a 0794     		str	r4, [sp, #28]
 1514 011c 2223     		movs	r3, #34
 1515 011e 0693     		str	r3, [sp, #24]
 1516 0120 0594     		str	r4, [sp, #20]
 1517 0122 0494     		str	r4, [sp, #16]
 1518 0124 0394     		str	r4, [sp, #12]
 1519 0126 0294     		str	r4, [sp, #8]
 1520 0128 6423     		movs	r3, #100
 1521 012a 0193     		str	r3, [sp, #4]
 1522 012c 0094     		str	r4, [sp]
 1523 012e 4B46     		mov	r3, r9
 1524 0130 5A46     		mov	r2, fp
 1525 0132 A149     		ldr	r1, .L119+76
 1526 0134 3846     		mov	r0, r7
 1527 0136 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effect_Init
 1528              	.LVL95:
 229:Core/Src/main.c ****   NOS_WS2812B_Strip_Effect_Init(&steadyColorA,&white,0,0,0,0,0,0,0,0,EFFECT_STEADY_COLOR_ID,false);
 1529              		.loc 1 229 3 view .LVU460
 1530 013a DFF88CB2 		ldr	fp, .L119+92
 1531 013e 0794     		str	r4, [sp, #28]
 1532 0140 2323     		movs	r3, #35
 1533 0142 0693     		str	r3, [sp, #24]
 1534 0144 0594     		str	r4, [sp, #20]
 1535 0146 0494     		str	r4, [sp, #16]
 1536 0148 0394     		str	r4, [sp, #12]
 1537 014a 0323     		movs	r3, #3
 1538 014c 0293     		str	r3, [sp, #8]
 1539 014e 3023     		movs	r3, #48
 1540 0150 0193     		str	r3, [sp, #4]
 1541 0152 0094     		str	r4, [sp]
 1542 0154 4B46     		mov	r3, r9
 1543 0156 6422     		movs	r2, #100
 1544 0158 9749     		ldr	r1, .L119+76
 1545 015a 5846     		mov	r0, fp
 1546 015c FFF7FEFF 		bl	NOS_WS2812B_Strip_Effect_Init
 1547              	.LVL96:
 230:Core/Src/main.c ****   #endif
 1548              		.loc 1 230 3 view .LVU461
 1549 0160 DFF86892 		ldr	r9, .L119+96
 1550 0164 0794     		str	r4, [sp, #28]
 1551 0166 2423     		movs	r3, #36
 1552 0168 0693     		str	r3, [sp, #24]
 1553 016a 0594     		str	r4, [sp, #20]
 1554 016c 0494     		str	r4, [sp, #16]
 1555 016e 0394     		str	r4, [sp, #12]
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 53


 1556 0170 0294     		str	r4, [sp, #8]
 1557 0172 0194     		str	r4, [sp, #4]
 1558 0174 0094     		str	r4, [sp]
 1559 0176 2346     		mov	r3, r4
 1560 0178 2246     		mov	r2, r4
 1561 017a 8F49     		ldr	r1, .L119+76
 1562 017c 4846     		mov	r0, r9
 1563 017e FFF7FEFF 		bl	NOS_WS2812B_Strip_Effect_Init
 1564              	.LVL97:
 233:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripB,breatheA);
 1565              		.loc 1 233 3 view .LVU462
 1566 0182 6C46     		mov	r4, sp
 1567 0184 06F10C0C 		add	ip, r6, #12
 1568 0188 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1569 018c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1570 018e 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1571 0192 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1572 0196 96E80E00 		ldm	r6, {r1, r2, r3}
 1573 019a 4046     		mov	r0, r8
 1574 019c FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1575              	.LVL98:
 234:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripC,breatheA);
 1576              		.loc 1 234 3 view .LVU463
 1577 01a0 EE46     		mov	lr, sp
 1578 01a2 06F10C0C 		add	ip, r6, #12
 1579 01a6 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1580 01aa AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 1581 01ae 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1582 01b2 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1583 01b6 96E80E00 		ldm	r6, {r1, r2, r3}
 1584 01ba 7448     		ldr	r0, .L119+32
 1585 01bc FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1586              	.LVL99:
 235:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripD,breatheA);
 1587              		.loc 1 235 3 view .LVU464
 1588 01c0 EE46     		mov	lr, sp
 1589 01c2 06F10C0C 		add	ip, r6, #12
 1590 01c6 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1591 01ca AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 1592 01ce 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1593 01d2 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1594 01d6 96E80E00 		ldm	r6, {r1, r2, r3}
 1595 01da 5046     		mov	r0, r10
 1596 01dc FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1597              	.LVL100:
 236:Core/Src/main.c **** 
 1598              		.loc 1 236 3 view .LVU465
 1599 01e0 EE46     		mov	lr, sp
 1600 01e2 06F10C0C 		add	ip, r6, #12
 1601 01e6 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1602 01ea AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 1603 01ee 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1604 01f2 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1605 01f6 96E80E00 		ldm	r6, {r1, r2, r3}
 1606 01fa 6948     		ldr	r0, .L119+52
 1607 01fc FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1608              	.LVL101:
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 54


 238:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripB,rainbowA);
 1609              		.loc 1 238 3 view .LVU466
 1610 0200 EC46     		mov	ip, sp
 1611 0202 05F10C06 		add	r6, r5, #12
 1612 0206 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1613 0208 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1614 020c 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 1615 0210 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1616 0214 95E80E00 		ldm	r5, {r1, r2, r3}
 1617 0218 4046     		mov	r0, r8
 1618 021a FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1619              	.LVL102:
 239:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripC,rainbowA);
 1620              		.loc 1 239 3 view .LVU467
 1621 021e EC46     		mov	ip, sp
 1622 0220 05F10C06 		add	r6, r5, #12
 1623 0224 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1624 0226 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1625 022a 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 1626 022e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1627 0232 95E80E00 		ldm	r5, {r1, r2, r3}
 1628 0236 5548     		ldr	r0, .L119+32
 1629 0238 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1630              	.LVL103:
 240:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripD,rainbowA);
 1631              		.loc 1 240 3 view .LVU468
 1632 023c EC46     		mov	ip, sp
 1633 023e 05F10C06 		add	r6, r5, #12
 1634 0242 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1635 0244 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1636 0248 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 1637 024c 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1638 0250 95E80E00 		ldm	r5, {r1, r2, r3}
 1639 0254 5046     		mov	r0, r10
 1640 0256 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1641              	.LVL104:
 241:Core/Src/main.c **** 
 1642              		.loc 1 241 3 view .LVU469
 1643 025a EC46     		mov	ip, sp
 1644 025c 05F10C06 		add	r6, r5, #12
 1645 0260 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1646 0262 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1647 0266 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 1648 026a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1649 026e 95E80E00 		ldm	r5, {r1, r2, r3}
 1650 0272 4B48     		ldr	r0, .L119+52
 1651 0274 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1652              	.LVL105:
 243:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripB,dotsA);
 1653              		.loc 1 243 3 view .LVU470
 1654 0278 6E46     		mov	r6, sp
 1655 027a 07F10C05 		add	r5, r7, #12
 1656 027e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1657 0280 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1658 0282 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1659 0286 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1660 028a 97E80E00 		ldm	r7, {r1, r2, r3}
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 55


 1661 028e 4046     		mov	r0, r8
 1662 0290 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1663              	.LVL106:
 244:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripC,dotsA);
 1664              		.loc 1 244 3 view .LVU471
 1665 0294 6E46     		mov	r6, sp
 1666 0296 07F10C05 		add	r5, r7, #12
 1667 029a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1668 029c 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1669 029e 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1670 02a2 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1671 02a6 97E80E00 		ldm	r7, {r1, r2, r3}
 1672 02aa 3848     		ldr	r0, .L119+32
 1673 02ac FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1674              	.LVL107:
 245:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripD,dotsA);
 1675              		.loc 1 245 3 view .LVU472
 1676 02b0 6E46     		mov	r6, sp
 1677 02b2 07F10C05 		add	r5, r7, #12
 1678 02b6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1679 02b8 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1680 02ba 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1681 02be 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1682 02c2 97E80E00 		ldm	r7, {r1, r2, r3}
 1683 02c6 5046     		mov	r0, r10
 1684 02c8 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1685              	.LVL108:
 246:Core/Src/main.c **** 
 1686              		.loc 1 246 3 view .LVU473
 1687 02cc 6E46     		mov	r6, sp
 1688 02ce 07F10C05 		add	r5, r7, #12
 1689 02d2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1690 02d4 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1691 02d6 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1692 02da 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1693 02de 97E80E00 		ldm	r7, {r1, r2, r3}
 1694 02e2 2F48     		ldr	r0, .L119+52
 1695 02e4 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1696              	.LVL109:
 248:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripB,walkingPixelA);
 1697              		.loc 1 248 3 view .LVU474
 1698 02e8 6E46     		mov	r6, sp
 1699 02ea 0BF10C05 		add	r5, fp, #12
 1700 02ee 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1701 02f0 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1702 02f2 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1703 02f6 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1704 02fa 9BE80E00 		ldm	fp, {r1, r2, r3}
 1705 02fe 4046     		mov	r0, r8
 1706 0300 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1707              	.LVL110:
 249:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripC,walkingPixelA);
 1708              		.loc 1 249 3 view .LVU475
 1709 0304 6E46     		mov	r6, sp
 1710 0306 0BF10C05 		add	r5, fp, #12
 1711 030a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1712 030c 0FC6     		stmia	r6!, {r0, r1, r2, r3}
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 56


 1713 030e 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1714 0312 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1715 0316 9BE80E00 		ldm	fp, {r1, r2, r3}
 1716 031a 1C48     		ldr	r0, .L119+32
 1717 031c FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1718              	.LVL111:
 250:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripD,walkingPixelA);
 1719              		.loc 1 250 3 view .LVU476
 1720 0320 6E46     		mov	r6, sp
 1721 0322 0BF10C05 		add	r5, fp, #12
 1722 0326 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1723 0328 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1724 032a 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1725 032e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1726 0332 9BE80E00 		ldm	fp, {r1, r2, r3}
 1727 0336 5046     		mov	r0, r10
 1728 0338 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1729              	.LVL112:
 251:Core/Src/main.c **** 
 1730              		.loc 1 251 3 view .LVU477
 1731 033c 6E46     		mov	r6, sp
 1732 033e 0BF10C05 		add	r5, fp, #12
 1733 0342 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1734 0344 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1735 0346 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1736 034a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1737 034e 9BE80E00 		ldm	fp, {r1, r2, r3}
 1738 0352 1348     		ldr	r0, .L119+52
 1739 0354 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1740              	.LVL113:
 253:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripB,steadyColorA);
 1741              		.loc 1 253 3 view .LVU478
 1742 0358 6E46     		mov	r6, sp
 1743 035a 09F10C05 		add	r5, r9, #12
 1744 035e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1745 0360 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1746 0362 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1747 0366 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1748 036a 31E0     		b	.L120
 1749              	.L121:
 1750              		.align	2
 1751              	.L119:
 1752 036c 14020000 		.word	UART1+532
 1753 0370 00000000 		.word	huart1
 1754 0374 00000000 		.word	huart2
 1755 0378 00000000 		.word	.LC0
 1756 037c 00000000 		.word	pixelsA
 1757 0380 00000000 		.word	frameBufferA
 1758 0384 00000000 		.word	pixelsB
 1759 0388 00000000 		.word	frameBufferB
 1760 038c 00000000 		.word	stripB
 1761 0390 00000000 		.word	pixelsC
 1762 0394 00000000 		.word	frameBufferC
 1763 0398 00000000 		.word	pixelsD
 1764 039c 00000000 		.word	frameBufferD
 1765 03a0 00000000 		.word	stripD
 1766 03a4 00000000 		.word	screenUpdateEvent
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 57


 1767 03a8 00000000 		.word	nullColor
 1768 03ac 00000000 		.word	breatheA
 1769 03b0 00000000 		.word	rainbowA
 1770 03b4 00000000 		.word	dotsA
 1771 03b8 00000000 		.word	white
 1772 03bc 14020000 		.word	UART2+532
 1773 03c0 00000000 		.word	stripA
 1774 03c4 00000000 		.word	stripC
 1775 03c8 00000000 		.word	walkingPixelA
 1776 03cc 00000000 		.word	steadyColorA
 1777              	.L120:
 1778 03d0 99E80E00 		ldm	r9, {r1, r2, r3}
 1779 03d4 4046     		mov	r0, r8
 1780 03d6 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1781              	.LVL114:
 254:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripC,steadyColorA);
 1782              		.loc 1 254 3 view .LVU479
 1783 03da 6E46     		mov	r6, sp
 1784 03dc 09F10C05 		add	r5, r9, #12
 1785 03e0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1786 03e2 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1787 03e4 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1788 03e8 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1789 03ec 99E80E00 		ldm	r9, {r1, r2, r3}
 1790 03f0 A048     		ldr	r0, .L122
 1791 03f2 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1792              	.LVL115:
 255:Core/Src/main.c ****   NOS_WS2812B_Strip_Effects_AddEffect(&stripD,steadyColorA);
 1793              		.loc 1 255 3 view .LVU480
 1794 03f6 6E46     		mov	r6, sp
 1795 03f8 09F10C05 		add	r5, r9, #12
 1796 03fc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1797 03fe 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1798 0400 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1799 0404 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1800 0408 99E80E00 		ldm	r9, {r1, r2, r3}
 1801 040c 5046     		mov	r0, r10
 1802 040e FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1803              	.LVL116:
 256:Core/Src/main.c **** 
 1804              		.loc 1 256 3 view .LVU481
 1805 0412 6E46     		mov	r6, sp
 1806 0414 09F10C05 		add	r5, r9, #12
 1807 0418 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1808 041a 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1809 041c 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1810 0420 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1811 0424 99E80E00 		ldm	r9, {r1, r2, r3}
 1812 0428 9348     		ldr	r0, .L122+4
 1813 042a FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_AddEffect
 1814              	.LVL117:
 258:Core/Src/main.c ****   NOS_WS2812B_Strip_ColorFill(&stripB,white);
 1815              		.loc 1 258 3 view .LVU482
 1816 042e 934B     		ldr	r3, .L122+8
 1817 0430 1C46     		mov	r4, r3
 1818 0432 1968     		ldr	r1, [r3]
 1819 0434 4046     		mov	r0, r8
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 58


 1820 0436 FFF7FEFF 		bl	NOS_WS2812B_Strip_ColorFill
 1821              	.LVL118:
 259:Core/Src/main.c ****   NOS_WS2812B_Strip_ColorFill(&stripC,white);
 1822              		.loc 1 259 3 view .LVU483
 1823 043a 2168     		ldr	r1, [r4]
 1824 043c 8D48     		ldr	r0, .L122
 1825 043e FFF7FEFF 		bl	NOS_WS2812B_Strip_ColorFill
 1826              	.LVL119:
 260:Core/Src/main.c ****   NOS_WS2812B_Strip_ColorFill(&stripD,white);
 1827              		.loc 1 260 3 view .LVU484
 1828 0442 2168     		ldr	r1, [r4]
 1829 0444 5046     		mov	r0, r10
 1830 0446 FFF7FEFF 		bl	NOS_WS2812B_Strip_ColorFill
 1831              	.LVL120:
 261:Core/Src/main.c **** 
 1832              		.loc 1 261 3 view .LVU485
 1833 044a 2168     		ldr	r1, [r4]
 1834 044c 8A48     		ldr	r0, .L122+4
 1835 044e FFF7FEFF 		bl	NOS_WS2812B_Strip_ColorFill
 1836              	.LVL121:
 263:Core/Src/main.c ****   NOS_WS2812B_Strip_Update(&stripB);
 1837              		.loc 1 263 3 view .LVU486
 1838 0452 4046     		mov	r0, r8
 1839 0454 FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 1840              	.LVL122:
 264:Core/Src/main.c ****   NOS_WS2812B_Strip_Update(&stripC);
 1841              		.loc 1 264 3 view .LVU487
 1842 0458 8648     		ldr	r0, .L122
 1843 045a FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 1844              	.LVL123:
 265:Core/Src/main.c ****   NOS_WS2812B_Strip_Update(&stripD);
 1845              		.loc 1 265 3 view .LVU488
 1846 045e 5046     		mov	r0, r10
 1847 0460 FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 1848              	.LVL124:
 266:Core/Src/main.c **** 
 1849              		.loc 1 266 3 view .LVU489
 1850 0464 8448     		ldr	r0, .L122+4
 1851 0466 FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 1852              	.LVL125:
 268:Core/Src/main.c ****   NOS_Strip_UART_ParseStringCommand(&stripB,"&/Breathe/70/80/20/true/&/Rainbow/#0000ff/#7f00ff/60/f
 1853              		.loc 1 268 3 view .LVU490
 1854 046a 854C     		ldr	r4, .L122+12
 1855 046c 8822     		movs	r2, #136
 1856 046e 2146     		mov	r1, r4
 1857 0470 4046     		mov	r0, r8
 1858 0472 FFF7FEFF 		bl	NOS_Strip_UART_ParseStringCommand
 1859              	.LVL126:
 269:Core/Src/main.c ****   NOS_Strip_UART_ParseStringCommand(&stripC,"&/Breathe/70/80/20/true/&/Rainbow/#0000ff/#7f00ff/60/f
 1860              		.loc 1 269 3 view .LVU491
 1861 0476 8822     		movs	r2, #136
 1862 0478 2146     		mov	r1, r4
 1863 047a 7E48     		ldr	r0, .L122
 1864 047c FFF7FEFF 		bl	NOS_Strip_UART_ParseStringCommand
 1865              	.LVL127:
 270:Core/Src/main.c ****   /* USER CODE END 2 */
 1866              		.loc 1 270 3 view .LVU492
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 59


 1867 0480 8822     		movs	r2, #136
 1868 0482 2146     		mov	r1, r4
 1869 0484 5046     		mov	r0, r10
 1870 0486 FFF7FEFF 		bl	NOS_Strip_UART_ParseStringCommand
 1871              	.LVL128:
 1872              	.L111:
 275:Core/Src/main.c ****   {
 1873              		.loc 1 275 3 view .LVU493
 277:Core/Src/main.c ****     {
 1874              		.loc 1 277 5 view .LVU494
 277:Core/Src/main.c ****     {
 1875              		.loc 1 277 8 is_stmt 0 view .LVU495
 1876 048a 7E4B     		ldr	r3, .L122+16
 1877 048c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 277:Core/Src/main.c ****     {
 1878              		.loc 1 277 7 view .LVU496
 1879 048e 03BB     		cbnz	r3, .L115
 1880              	.L100:
 291:Core/Src/main.c ****     {
 1881              		.loc 1 291 5 is_stmt 1 view .LVU497
 291:Core/Src/main.c ****     {
 1882              		.loc 1 291 8 is_stmt 0 view .LVU498
 1883 0490 7D48     		ldr	r0, .L122+20
 1884 0492 FFF7FEFF 		bl	NOS_UART_CheckReceive
 1885              	.LVL129:
 291:Core/Src/main.c ****     {
 1886              		.loc 1 291 7 view .LVU499
 1887 0496 0028     		cmp	r0, #0
 1888 0498 34D1     		bne	.L116
 1889              	.L101:
 321:Core/Src/main.c ****     {
 1890              		.loc 1 321 5 is_stmt 1 view .LVU500
 321:Core/Src/main.c ****     {
 1891              		.loc 1 321 8 is_stmt 0 view .LVU501
 1892 049a 7C48     		ldr	r0, .L122+24
 1893 049c FFF7FEFF 		bl	NOS_UART_CheckReceive
 1894              	.LVL130:
 321:Core/Src/main.c ****     {
 1895              		.loc 1 321 7 view .LVU502
 1896 04a0 0028     		cmp	r0, #0
 1897 04a2 65D1     		bne	.L117
 1898              	.L103:
 401:Core/Src/main.c ****     {
 1899              		.loc 1 401 5 is_stmt 1 view .LVU503
 401:Core/Src/main.c ****     {
 1900              		.loc 1 401 9 is_stmt 0 view .LVU504
 1901 04a4 7A48     		ldr	r0, .L122+28
 1902 04a6 FFF7FEFF 		bl	NOS_TimeEvent_Check
 1903              	.LVL131:
 401:Core/Src/main.c ****     {
 1904              		.loc 1 401 8 view .LVU505
 1905 04aa 0028     		cmp	r0, #0
 1906 04ac EDD0     		beq	.L111
 404:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripB);
 1907              		.loc 1 404 7 is_stmt 1 view .LVU506
 1908 04ae 7948     		ldr	r0, .L122+32
 1909 04b0 FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 60


 1910              	.LVL132:
 405:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripC);
 1911              		.loc 1 405 7 view .LVU507
 1912 04b4 6F48     		ldr	r0, .L122
 1913 04b6 FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 1914              	.LVL133:
 406:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripD);
 1915              		.loc 1 406 7 view .LVU508
 1916 04ba 7748     		ldr	r0, .L122+36
 1917 04bc FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 1918              	.LVL134:
 407:Core/Src/main.c **** 
 1919              		.loc 1 407 7 view .LVU509
 1920 04c0 6D48     		ldr	r0, .L122+4
 1921 04c2 FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 1922              	.LVL135:
 409:Core/Src/main.c ****       
 1923              		.loc 1 409 7 view .LVU510
 1924 04c6 FFF7FEFF 		bl	visHandle
 1925              	.LVL136:
 411:Core/Src/main.c ****     }
 1926              		.loc 1 411 7 view .LVU511
 1927 04ca 7148     		ldr	r0, .L122+28
 1928 04cc FFF7FEFF 		bl	NOS_TimeEvent_FinishEvent
 1929              	.LVL137:
 1930 04d0 DBE7     		b	.L111
 1931              	.L115:
 279:Core/Src/main.c ****           NOS_UART_Timer_Handler(&UART1);
 1932              		.loc 1 279 11 view .LVU512
 1933 04d2 6E48     		ldr	r0, .L122+24
 1934 04d4 FFF7FEFF 		bl	NOS_UART_Timer_Handler
 1935              	.LVL138:
 280:Core/Src/main.c **** 
 1936              		.loc 1 280 11 view .LVU513
 1937 04d8 6B48     		ldr	r0, .L122+20
 1938 04da FFF7FEFF 		bl	NOS_UART_Timer_Handler
 1939              	.LVL139:
 282:Core/Src/main.c **** 
 1940              		.loc 1 282 11 view .LVU514
 1941 04de 6C48     		ldr	r0, .L122+28
 1942 04e0 FFF7FEFF 		bl	NOS_TimeEvent_TickHandler
 1943              	.LVL140:
 284:Core/Src/main.c ****           NOS_WS2812B_Strip_Effects_Handler(&stripB);
 1944              		.loc 1 284 11 view .LVU515
 1945 04e4 6B48     		ldr	r0, .L122+32
 1946 04e6 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_Handler
 1947              	.LVL141:
 285:Core/Src/main.c ****           NOS_WS2812B_Strip_Effects_Handler(&stripC);
 1948              		.loc 1 285 11 view .LVU516
 1949 04ea 6248     		ldr	r0, .L122
 1950 04ec FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_Handler
 1951              	.LVL142:
 286:Core/Src/main.c ****           NOS_WS2812B_Strip_Effects_Handler(&stripD);
 1952              		.loc 1 286 11 view .LVU517
 1953 04f0 6948     		ldr	r0, .L122+36
 1954 04f2 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_Handler
 1955              	.LVL143:
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 61


 287:Core/Src/main.c ****           tick = false;
 1956              		.loc 1 287 11 view .LVU518
 1957 04f6 6048     		ldr	r0, .L122+4
 1958 04f8 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effects_Handler
 1959              	.LVL144:
 288:Core/Src/main.c ****     }
 1960              		.loc 1 288 11 view .LVU519
 288:Core/Src/main.c ****     }
 1961              		.loc 1 288 16 is_stmt 0 view .LVU520
 1962 04fc 614B     		ldr	r3, .L122+16
 1963 04fe 0022     		movs	r2, #0
 1964 0500 1A70     		strb	r2, [r3]
 1965 0502 C5E7     		b	.L100
 1966              	.L116:
 293:Core/Src/main.c ****       {
 1967              		.loc 1 293 7 is_stmt 1 view .LVU521
 293:Core/Src/main.c ****       {
 1968              		.loc 1 293 71 is_stmt 0 view .LVU522
 1969 0504 6049     		ldr	r1, .L122+20
 293:Core/Src/main.c ****       {
 1970              		.loc 1 293 10 view .LVU523
 1971 0506 B1F82A26 		ldrh	r2, [r1, #1578]
 1972 050a 01F50571 		add	r1, r1, #532
 1973 050e 6148     		ldr	r0, .L122+32
 1974 0510 FFF7FEFF 		bl	NOS_Strip_UART_ParseStringCommand
 1975              	.LVL145:
 293:Core/Src/main.c ****       {
 1976              		.loc 1 293 9 view .LVU524
 1977 0514 B0B9     		cbnz	r0, .L118
 1978              	.L102:
 310:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOC,GPIO_PIN_13);
 1979              		.loc 1 310 7 is_stmt 1 view .LVU525
 1980 0516 5C48     		ldr	r0, .L122+20
 1981 0518 FFF7FEFF 		bl	NOS_UART_EndReceive
 1982              	.LVL146:
 311:Core/Src/main.c ****       
 1983              		.loc 1 311 7 view .LVU526
 1984 051c 4FF40051 		mov	r1, #8192
 1985 0520 5E48     		ldr	r0, .L122+40
 1986 0522 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1987              	.LVL147:
 313:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripB);
 1988              		.loc 1 313 7 view .LVU527
 1989 0526 5B48     		ldr	r0, .L122+32
 1990 0528 FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 1991              	.LVL148:
 314:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripC);
 1992              		.loc 1 314 7 view .LVU528
 1993 052c 5148     		ldr	r0, .L122
 1994 052e FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 1995              	.LVL149:
 315:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripD);
 1996              		.loc 1 315 7 view .LVU529
 1997 0532 5948     		ldr	r0, .L122+36
 1998 0534 FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 1999              	.LVL150:
 316:Core/Src/main.c ****       visHandle();
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 62


 2000              		.loc 1 316 7 view .LVU530
 2001 0538 4F48     		ldr	r0, .L122+4
 2002 053a FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 2003              	.LVL151:
 317:Core/Src/main.c **** 
 2004              		.loc 1 317 7 view .LVU531
 2005 053e FFF7FEFF 		bl	visHandle
 2006              	.LVL152:
 2007 0542 AAE7     		b	.L101
 2008              	.L118:
 295:Core/Src/main.c ****         NOS_Strip_UART_ParseStringCommand(&stripC,UART1.rx_buff,UART1.lastMessageSize);
 2009              		.loc 1 295 9 view .LVU532
 295:Core/Src/main.c ****         NOS_Strip_UART_ParseStringCommand(&stripC,UART1.rx_buff,UART1.lastMessageSize);
 2010              		.loc 1 295 70 is_stmt 0 view .LVU533
 2011 0544 504C     		ldr	r4, .L122+20
 295:Core/Src/main.c ****         NOS_Strip_UART_ParseStringCommand(&stripC,UART1.rx_buff,UART1.lastMessageSize);
 2012              		.loc 1 295 9 view .LVU534
 2013 0546 04F50575 		add	r5, r4, #532
 2014 054a B4F82A26 		ldrh	r2, [r4, #1578]
 2015 054e 2946     		mov	r1, r5
 2016 0550 4848     		ldr	r0, .L122
 2017 0552 FFF7FEFF 		bl	NOS_Strip_UART_ParseStringCommand
 2018              	.LVL153:
 296:Core/Src/main.c ****         NOS_Strip_UART_ParseStringCommand(&stripD,UART1.rx_buff,UART1.lastMessageSize);
 2019              		.loc 1 296 9 is_stmt 1 view .LVU535
 2020 0556 B4F82A26 		ldrh	r2, [r4, #1578]
 2021 055a 2946     		mov	r1, r5
 2022 055c 4E48     		ldr	r0, .L122+36
 2023 055e FFF7FEFF 		bl	NOS_Strip_UART_ParseStringCommand
 2024              	.LVL154:
 297:Core/Src/main.c **** 
 2025              		.loc 1 297 9 view .LVU536
 2026 0562 B4F82A26 		ldrh	r2, [r4, #1578]
 2027 0566 2946     		mov	r1, r5
 2028 0568 4348     		ldr	r0, .L122+4
 2029 056a FFF7FEFF 		bl	NOS_Strip_UART_ParseStringCommand
 2030              	.LVL155:
 2031 056e D2E7     		b	.L102
 2032              	.L117:
 323:Core/Src/main.c ****       {
 2033              		.loc 1 323 7 view .LVU537
 323:Core/Src/main.c ****       {
 2034              		.loc 1 323 10 is_stmt 0 view .LVU538
 2035 0570 4B49     		ldr	r1, .L122+44
 2036 0572 4648     		ldr	r0, .L122+24
 2037 0574 FFF7FEFF 		bl	NOS_UART_ParsePacket
 2038              	.LVL156:
 323:Core/Src/main.c ****       {
 2039              		.loc 1 323 9 view .LVU539
 2040 0578 0028     		cmp	r0, #0
 2041 057a 34D0     		beq	.L104
 326:Core/Src/main.c ****       {
 2042              		.loc 1 326 7 is_stmt 1 view .LVU540
 326:Core/Src/main.c ****       {
 2043              		.loc 1 326 34 is_stmt 0 view .LVU541
 2044 057c 484B     		ldr	r3, .L122+44
 2045 057e 5B88     		ldrh	r3, [r3, #2]
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 63


 326:Core/Src/main.c ****       {
 2046              		.loc 1 326 7 view .LVU542
 2047 0580 013B     		subs	r3, r3, #1
 2048 0582 042B     		cmp	r3, #4
 2049 0584 2FD8     		bhi	.L104
 2050 0586 DFE803F0 		tbb	[pc, r3]
 2051              	.L106:
 2052 058a 03       		.byte	(.L110-.L106)/2
 2053 058b 49       		.byte	(.L109-.L106)/2
 2054 058c 54       		.byte	(.L108-.L106)/2
 2055 058d 5F       		.byte	(.L107-.L106)/2
 2056 058e 6A       		.byte	(.L105-.L106)/2
 2057 058f 00       		.p2align 1
 2058              	.L110:
 331:Core/Src/main.c ****           NOS_Strip_UART_ParseCommand(&stripB,&lastMessage);
 2059              		.loc 1 331 11 is_stmt 1 view .LVU543
 2060 0590 434D     		ldr	r5, .L122+44
 2061 0592 404C     		ldr	r4, .L122+32
 2062 0594 2946     		mov	r1, r5
 2063 0596 2046     		mov	r0, r4
 2064 0598 FFF7FEFF 		bl	NOS_Strip_UART_ParseCommand
 2065              	.LVL157:
 332:Core/Src/main.c ****           NOS_Strip_UART_ParseCommand(&stripC,&lastMessage);
 2066              		.loc 1 332 11 view .LVU544
 2067 059c 2946     		mov	r1, r5
 2068 059e 3548     		ldr	r0, .L122
 2069 05a0 FFF7FEFF 		bl	NOS_Strip_UART_ParseCommand
 2070              	.LVL158:
 333:Core/Src/main.c ****           NOS_Strip_UART_ParseCommand(&stripD,&lastMessage);
 2071              		.loc 1 333 11 view .LVU545
 2072 05a4 2946     		mov	r1, r5
 2073 05a6 3C48     		ldr	r0, .L122+36
 2074 05a8 FFF7FEFF 		bl	NOS_Strip_UART_ParseCommand
 2075              	.LVL159:
 334:Core/Src/main.c **** 
 2076              		.loc 1 334 11 view .LVU546
 2077 05ac 2946     		mov	r1, r5
 2078 05ae 3248     		ldr	r0, .L122+4
 2079 05b0 FFF7FEFF 		bl	NOS_Strip_UART_ParseCommand
 2080              	.LVL160:
 336:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&rainbowA,&stripA.effects[1]);
 2081              		.loc 1 336 11 view .LVU547
 2082 05b4 04F11001 		add	r1, r4, #16
 2083 05b8 3A48     		ldr	r0, .L122+48
 2084 05ba FFF7FEFF 		bl	NOS_WS2812B_Strip_Effect_Copy
 2085              	.LVL161:
 337:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&dotsA,&stripA.effects[2]);
 2086              		.loc 1 337 11 view .LVU548
 2087 05be 04F13C01 		add	r1, r4, #60
 2088 05c2 3948     		ldr	r0, .L122+52
 2089 05c4 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effect_Copy
 2090              	.LVL162:
 338:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&walkingPixelA,&stripA.effects[3]);
 2091              		.loc 1 338 11 view .LVU549
 2092 05c8 04F16801 		add	r1, r4, #104
 2093 05cc 3748     		ldr	r0, .L122+56
 2094 05ce FFF7FEFF 		bl	NOS_WS2812B_Strip_Effect_Copy
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 64


 2095              	.LVL163:
 339:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&steadyColorA,&stripA.effects[4]);
 2096              		.loc 1 339 11 view .LVU550
 2097 05d2 04F19401 		add	r1, r4, #148
 2098 05d6 3648     		ldr	r0, .L122+60
 2099 05d8 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effect_Copy
 2100              	.LVL164:
 340:Core/Src/main.c **** 
 2101              		.loc 1 340 11 view .LVU551
 2102 05dc 04F1C001 		add	r1, r4, #192
 2103 05e0 3448     		ldr	r0, .L122+64
 2104 05e2 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effect_Copy
 2105              	.LVL165:
 345:Core/Src/main.c **** 
 2106              		.loc 1 345 9 view .LVU552
 2107              	.L104:
 388:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOC,GPIO_PIN_13);
 2108              		.loc 1 388 7 view .LVU553
 2109 05e6 2948     		ldr	r0, .L122+24
 2110 05e8 FFF7FEFF 		bl	NOS_UART_EndReceive
 2111              	.LVL166:
 389:Core/Src/main.c ****       
 2112              		.loc 1 389 7 view .LVU554
 2113 05ec 4FF40051 		mov	r1, #8192
 2114 05f0 2A48     		ldr	r0, .L122+40
 2115 05f2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 2116              	.LVL167:
 391:Core/Src/main.c ****       
 2117              		.loc 1 391 7 view .LVU555
 2118 05f6 3049     		ldr	r1, .L122+68
 2119 05f8 2948     		ldr	r0, .L122+44
 2120 05fa FFF7FEFF 		bl	NOS_UART_PacketApprovedNotice
 2121              	.LVL168:
 393:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripB);
 2122              		.loc 1 393 7 view .LVU556
 2123 05fe 2548     		ldr	r0, .L122+32
 2124 0600 FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 2125              	.LVL169:
 394:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripC);
 2126              		.loc 1 394 7 view .LVU557
 2127 0604 1B48     		ldr	r0, .L122
 2128 0606 FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 2129              	.LVL170:
 395:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripD);
 2130              		.loc 1 395 7 view .LVU558
 2131 060a 2348     		ldr	r0, .L122+36
 2132 060c FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 2133              	.LVL171:
 396:Core/Src/main.c ****       visHandle();
 2134              		.loc 1 396 7 view .LVU559
 2135 0610 1948     		ldr	r0, .L122+4
 2136 0612 FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 2137              	.LVL172:
 397:Core/Src/main.c ****       
 2138              		.loc 1 397 7 view .LVU560
 2139 0616 FFF7FEFF 		bl	visHandle
 2140              	.LVL173:
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 65


 2141 061a 43E7     		b	.L103
 2142              	.L109:
 350:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&dotsA,&stripA.effects[2]);
 2143              		.loc 1 350 11 view .LVU561
 2144 061c 1D4C     		ldr	r4, .L122+32
 2145 061e 2049     		ldr	r1, .L122+44
 2146 0620 2046     		mov	r0, r4
 2147 0622 FFF7FEFF 		bl	NOS_Strip_UART_ParseCommand
 2148              	.LVL174:
 351:Core/Src/main.c ****           //NOS_Flash_Memory_Struct_Save(&flashMemoryStruct);
 2149              		.loc 1 351 11 view .LVU562
 2150 0626 04F16801 		add	r1, r4, #104
 2151 062a 2048     		ldr	r0, .L122+56
 2152 062c FFF7FEFF 		bl	NOS_WS2812B_Strip_Effect_Copy
 2153              	.LVL175:
 354:Core/Src/main.c **** 
 2154              		.loc 1 354 9 view .LVU563
 2155 0630 D9E7     		b	.L104
 2156              	.L108:
 359:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&dotsA,&stripB.effects[2]);
 2157              		.loc 1 359 11 view .LVU564
 2158 0632 104C     		ldr	r4, .L122
 2159 0634 1A49     		ldr	r1, .L122+44
 2160 0636 2046     		mov	r0, r4
 2161 0638 FFF7FEFF 		bl	NOS_Strip_UART_ParseCommand
 2162              	.LVL176:
 360:Core/Src/main.c ****           //NOS_Flash_Memory_Struct_Save(&flashMemoryStruct);
 2163              		.loc 1 360 11 view .LVU565
 2164 063c 04F16801 		add	r1, r4, #104
 2165 0640 1A48     		ldr	r0, .L122+56
 2166 0642 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effect_Copy
 2167              	.LVL177:
 363:Core/Src/main.c **** 
 2168              		.loc 1 363 9 view .LVU566
 2169 0646 CEE7     		b	.L104
 2170              	.L107:
 368:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&dotsA,&stripC.effects[2]);
 2171              		.loc 1 368 11 view .LVU567
 2172 0648 134C     		ldr	r4, .L122+36
 2173 064a 1549     		ldr	r1, .L122+44
 2174 064c 2046     		mov	r0, r4
 2175 064e FFF7FEFF 		bl	NOS_Strip_UART_ParseCommand
 2176              	.LVL178:
 369:Core/Src/main.c ****           //NOS_Flash_Memory_Struct_Save(&flashMemoryStruct);
 2177              		.loc 1 369 11 view .LVU568
 2178 0652 04F16801 		add	r1, r4, #104
 2179 0656 1548     		ldr	r0, .L122+56
 2180 0658 FFF7FEFF 		bl	NOS_WS2812B_Strip_Effect_Copy
 2181              	.LVL179:
 372:Core/Src/main.c **** 
 2182              		.loc 1 372 9 view .LVU569
 2183 065c C3E7     		b	.L104
 2184              	.L105:
 377:Core/Src/main.c ****           NOS_WS2812B_Strip_Effect_Copy(&dotsA,&stripD.effects[2]);
 2185              		.loc 1 377 11 view .LVU570
 2186 065e 064C     		ldr	r4, .L122+4
 2187 0660 0F49     		ldr	r1, .L122+44
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 66


 2188 0662 2046     		mov	r0, r4
 2189 0664 FFF7FEFF 		bl	NOS_Strip_UART_ParseCommand
 2190              	.LVL180:
 378:Core/Src/main.c ****           //NOS_Flash_Memory_Struct_Save(&flashMemoryStruct);
 2191              		.loc 1 378 11 view .LVU571
 2192 0668 04F16801 		add	r1, r4, #104
 2193 066c 0F48     		ldr	r0, .L122+56
 2194 066e FFF7FEFF 		bl	NOS_WS2812B_Strip_Effect_Copy
 2195              	.LVL181:
 381:Core/Src/main.c **** 
 2196              		.loc 1 381 9 view .LVU572
 2197 0672 B8E7     		b	.L104
 2198              	.L123:
 2199              		.align	2
 2200              	.L122:
 2201 0674 00000000 		.word	stripB
 2202 0678 00000000 		.word	stripD
 2203 067c 00000000 		.word	white
 2204 0680 08000000 		.word	.LC1
 2205 0684 00000000 		.word	tick
 2206 0688 00000000 		.word	UART1
 2207 068c 00000000 		.word	UART2
 2208 0690 00000000 		.word	screenUpdateEvent
 2209 0694 00000000 		.word	stripA
 2210 0698 00000000 		.word	stripC
 2211 069c 00080048 		.word	1207961600
 2212 06a0 00000000 		.word	lastMessage
 2213 06a4 00000000 		.word	breatheA
 2214 06a8 00000000 		.word	rainbowA
 2215 06ac 00000000 		.word	dotsA
 2216 06b0 00000000 		.word	walkingPixelA
 2217 06b4 00000000 		.word	steadyColorA
 2218 06b8 00000000 		.word	huart2
 2219              		.cfi_endproc
 2220              	.LFE136:
 2222              		.global	screenUpdate
 2223              		.section	.bss.screenUpdate,"aw",%nobits
 2226              	screenUpdate:
 2227 0000 00       		.space	1
 2228              		.global	tick
 2229              		.section	.bss.tick,"aw",%nobits
 2232              	tick:
 2233 0000 00       		.space	1
 2234              		.global	receive
 2235              		.section	.bss.receive,"aw",%nobits
 2238              	receive:
 2239 0000 00       		.space	1
 2240              		.global	white
 2241              		.section	.data.white,"aw"
 2242              		.align	2
 2245              	white:
 2246 0000 FF       		.byte	-1
 2247 0001 FF       		.byte	-1
 2248 0002 FF       		.byte	-1
 2249              		.global	nullColor
 2250              		.section	.bss.nullColor,"aw",%nobits
 2251              		.align	2
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 67


 2254              	nullColor:
 2255 0000 000000   		.space	3
 2256              		.global	flashMemoryStruct
 2257              		.section	.bss.flashMemoryStruct,"aw",%nobits
 2258              		.align	2
 2261              	flashMemoryStruct:
 2262 0000 00000000 		.space	108
 2262      00000000 
 2262      00000000 
 2262      00000000 
 2262      00000000 
 2263              		.global	tempInitChunk
 2264              		.section	.bss.tempInitChunk,"aw",%nobits
 2265              		.align	2
 2268              	tempInitChunk:
 2269 0000 00000000 		.space	12
 2269      00000000 
 2269      00000000 
 2270              		.global	bluetoothMessage
 2271              		.section	.bss.bluetoothMessage,"aw",%nobits
 2272              		.align	2
 2275              	bluetoothMessage:
 2276 0000 00000000 		.space	532
 2276      00000000 
 2276      00000000 
 2276      00000000 
 2276      00000000 
 2277              		.global	lastMessage
 2278              		.section	.bss.lastMessage,"aw",%nobits
 2279              		.align	2
 2282              	lastMessage:
 2283 0000 00000000 		.space	532
 2283      00000000 
 2283      00000000 
 2283      00000000 
 2283      00000000 
 2284              		.global	value
 2285              		.section	.bss.value,"aw",%nobits
 2286              		.align	2
 2289              	value:
 2290 0000 0000     		.space	2
 2291              		.global	steadyColorA
 2292              		.section	.bss.steadyColorA,"aw",%nobits
 2293              		.align	2
 2296              	steadyColorA:
 2297 0000 00000000 		.space	44
 2297      00000000 
 2297      00000000 
 2297      00000000 
 2297      00000000 
 2298              		.global	walkingPixelA
 2299              		.section	.bss.walkingPixelA,"aw",%nobits
 2300              		.align	2
 2303              	walkingPixelA:
 2304 0000 00000000 		.space	44
 2304      00000000 
 2304      00000000 
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 68


 2304      00000000 
 2304      00000000 
 2305              		.global	dotsA
 2306              		.section	.bss.dotsA,"aw",%nobits
 2307              		.align	2
 2310              	dotsA:
 2311 0000 00000000 		.space	44
 2311      00000000 
 2311      00000000 
 2311      00000000 
 2311      00000000 
 2312              		.global	rainbowA
 2313              		.section	.bss.rainbowA,"aw",%nobits
 2314              		.align	2
 2317              	rainbowA:
 2318 0000 00000000 		.space	44
 2318      00000000 
 2318      00000000 
 2318      00000000 
 2318      00000000 
 2319              		.global	breatheA
 2320              		.section	.bss.breatheA,"aw",%nobits
 2321              		.align	2
 2324              	breatheA:
 2325 0000 00000000 		.space	44
 2325      00000000 
 2325      00000000 
 2325      00000000 
 2325      00000000 
 2326              		.global	buttonDelay
 2327              		.section	.bss.buttonDelay,"aw",%nobits
 2328              		.align	2
 2331              	buttonDelay:
 2332 0000 00000000 		.space	4
 2333              		.global	currColor
 2334              		.section	.bss.currColor,"aw",%nobits
 2335              		.align	2
 2338              	currColor:
 2339 0000 00000000 		.space	4
 2340              		.global	uartPixelCount
 2341              		.section	.bss.uartPixelCount,"aw",%nobits
 2342              		.align	2
 2345              	uartPixelCount:
 2346 0000 00000000 		.space	4
 2347              		.global	receiveTime
 2348              		.section	.bss.receiveTime,"aw",%nobits
 2349              		.align	2
 2352              	receiveTime:
 2353 0000 00000000 		.space	4
 2354              		.global	UART1
 2355              		.section	.bss.UART1,"aw",%nobits
 2356              		.align	2
 2359              	UART1:
 2360 0000 00000000 		.space	1592
 2360      00000000 
 2360      00000000 
 2360      00000000 
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 69


 2360      00000000 
 2361              		.global	UART2
 2362              		.section	.bss.UART2,"aw",%nobits
 2363              		.align	2
 2366              	UART2:
 2367 0000 00000000 		.space	1592
 2367      00000000 
 2367      00000000 
 2367      00000000 
 2367      00000000 
 2368              		.global	pixelsD
 2369              		.section	.bss.pixelsD,"aw",%nobits
 2370              		.align	2
 2373              	pixelsD:
 2374 0000 00000000 		.space	1536
 2374      00000000 
 2374      00000000 
 2374      00000000 
 2374      00000000 
 2375              		.global	pixelsC
 2376              		.section	.bss.pixelsC,"aw",%nobits
 2377              		.align	2
 2380              	pixelsC:
 2381 0000 00000000 		.space	1536
 2381      00000000 
 2381      00000000 
 2381      00000000 
 2381      00000000 
 2382              		.global	pixelsB
 2383              		.section	.bss.pixelsB,"aw",%nobits
 2384              		.align	2
 2387              	pixelsB:
 2388 0000 00000000 		.space	1536
 2388      00000000 
 2388      00000000 
 2388      00000000 
 2388      00000000 
 2389              		.global	pixelsA
 2390              		.section	.bss.pixelsA,"aw",%nobits
 2391              		.align	2
 2394              	pixelsA:
 2395 0000 00000000 		.space	1536
 2395      00000000 
 2395      00000000 
 2395      00000000 
 2395      00000000 
 2396              		.global	stripD
 2397              		.section	.bss.stripD,"aw",%nobits
 2398              		.align	2
 2401              	stripD:
 2402 0000 00000000 		.space	240
 2402      00000000 
 2402      00000000 
 2402      00000000 
 2402      00000000 
 2403              		.global	stripC
 2404              		.section	.bss.stripC,"aw",%nobits
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 70


 2405              		.align	2
 2408              	stripC:
 2409 0000 00000000 		.space	240
 2409      00000000 
 2409      00000000 
 2409      00000000 
 2409      00000000 
 2410              		.global	stripB
 2411              		.section	.bss.stripB,"aw",%nobits
 2412              		.align	2
 2415              	stripB:
 2416 0000 00000000 		.space	240
 2416      00000000 
 2416      00000000 
 2416      00000000 
 2416      00000000 
 2417              		.global	stripA
 2418              		.section	.bss.stripA,"aw",%nobits
 2419              		.align	2
 2422              	stripA:
 2423 0000 00000000 		.space	240
 2423      00000000 
 2423      00000000 
 2423      00000000 
 2423      00000000 
 2424              		.global	screenUpdateEvent
 2425              		.section	.bss.screenUpdateEvent,"aw",%nobits
 2426              		.align	2
 2429              	screenUpdateEvent:
 2430 0000 00000000 		.space	12
 2430      00000000 
 2430      00000000 
 2431              		.global	huart2
 2432              		.section	.bss.huart2,"aw",%nobits
 2433              		.align	2
 2436              	huart2:
 2437 0000 00000000 		.space	136
 2437      00000000 
 2437      00000000 
 2437      00000000 
 2437      00000000 
 2438              		.global	huart1
 2439              		.section	.bss.huart1,"aw",%nobits
 2440              		.align	2
 2443              	huart1:
 2444 0000 00000000 		.space	136
 2444      00000000 
 2444      00000000 
 2444      00000000 
 2444      00000000 
 2445              		.global	hdma_tim2_ch2_ch4
 2446              		.section	.bss.hdma_tim2_ch2_ch4,"aw",%nobits
 2447              		.align	2
 2450              	hdma_tim2_ch2_ch4:
 2451 0000 00000000 		.space	72
 2451      00000000 
 2451      00000000 
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 71


 2451      00000000 
 2451      00000000 
 2452              		.global	hdma_tim2_up
 2453              		.section	.bss.hdma_tim2_up,"aw",%nobits
 2454              		.align	2
 2457              	hdma_tim2_up:
 2458 0000 00000000 		.space	72
 2458      00000000 
 2458      00000000 
 2458      00000000 
 2458      00000000 
 2459              		.global	hdma_tim2_ch1
 2460              		.section	.bss.hdma_tim2_ch1,"aw",%nobits
 2461              		.align	2
 2464              	hdma_tim2_ch1:
 2465 0000 00000000 		.space	72
 2465      00000000 
 2465      00000000 
 2465      00000000 
 2465      00000000 
 2466              		.global	htim2
 2467              		.section	.bss.htim2,"aw",%nobits
 2468              		.align	2
 2471              	htim2:
 2472 0000 00000000 		.space	76
 2472      00000000 
 2472      00000000 
 2472      00000000 
 2472      00000000 
 2473              		.global	htim1
 2474              		.section	.bss.htim1,"aw",%nobits
 2475              		.align	2
 2478              	htim1:
 2479 0000 00000000 		.space	76
 2479      00000000 
 2479      00000000 
 2479      00000000 
 2479      00000000 
 2480              		.global	hspi2
 2481              		.section	.bss.hspi2,"aw",%nobits
 2482              		.align	2
 2485              	hspi2:
 2486 0000 00000000 		.space	100
 2486      00000000 
 2486      00000000 
 2486      00000000 
 2486      00000000 
 2487              		.text
 2488              	.Letext0:
 2489              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l433xx.h"
 2490              		.file 5 "c:\\users\\igorn\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2491              		.file 6 "c:\\users\\igorn\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2492              		.file 7 "c:\\users\\igorn\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2493              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2494              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 2495              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 2496              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 72


 2497              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 2498              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 2499              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 2500              		.file 15 "Core/Inc/NOS_Typedefs.h"
 2501              		.file 16 "Core/Inc/NOS_UART.h"
 2502              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 2503              		.file 18 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 2504              		.file 19 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 2505              		.file 20 "Core/Inc/NOS_Time.h"
 2506              		.file 21 "Core/Inc/NOS_WS2812B_Strip_Effects.h"
 2507              		.file 22 "Core/Inc/NOS_Strip_UART.h"
 2508              		.file 23 "Core/Inc/NOS_WS2812B_Strip.h"
 2509              		.file 24 "Core/Inc/WS2812B_Effects.h"
 2510              		.file 25 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 2511              		.file 26 "<built-in>"
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 73


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:141    .text.MX_GPIO_Init:00000080 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:147    .text.MX_DMA_Init:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:152    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:217    .text.MX_DMA_Init:00000050 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:222    .text.NOS_RAM_Init:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:228    .text.NOS_RAM_Init:00000000 NOS_RAM_Init
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:305    .text.NOS_RAM_Alloc:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:311    .text.NOS_RAM_Alloc:00000000 NOS_RAM_Alloc
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:402    .text.NOS_RAM_Free:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:408    .text.NOS_RAM_Free:00000000 NOS_RAM_Free
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:532    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:538    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:601    .text.HAL_UART_RxCpltCallback:00000038 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2366   .bss.UART2:00000000 UART2
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2238   .bss.receive:00000000 receive
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2359   .bss.UART1:00000000 UART1
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:610    .text.Error_Handler:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:616    .text.Error_Handler:00000000 Error_Handler
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:648    .text.MX_SPI2_Init:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:653    .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:728    .text.MX_SPI2_Init:00000040 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2485   .bss.hspi2:00000000 hspi2
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:734    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:739    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:799    .text.MX_USART1_UART_Init:00000030 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2443   .bss.huart1:00000000 huart1
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:805    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:810    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:870    .text.MX_USART2_UART_Init:00000030 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2436   .bss.huart2:00000000 huart2
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:876    .text.MX_TIM2_Init:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:881    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:1006   .text.MX_TIM2_Init:00000080 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2471   .bss.htim2:00000000 htim2
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:1011   .text.MX_TIM1_Init:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:1016   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:1199   .text.MX_TIM1_Init:000000ac $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2478   .bss.htim1:00000000 htim1
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:1205   .text.SystemClock_Config:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:1211   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:1335   .rodata.main.str1.4:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:1344   .text.main:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:1350   .text.main:00000000 main
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:1752   .text.main:0000036c $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2394   .bss.pixelsA:00000000 pixelsA
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2387   .bss.pixelsB:00000000 pixelsB
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2415   .bss.stripB:00000000 stripB
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2380   .bss.pixelsC:00000000 pixelsC
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2373   .bss.pixelsD:00000000 pixelsD
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2401   .bss.stripD:00000000 stripD
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2429   .bss.screenUpdateEvent:00000000 screenUpdateEvent
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2254   .bss.nullColor:00000000 nullColor
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2324   .bss.breatheA:00000000 breatheA
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 74


C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2317   .bss.rainbowA:00000000 rainbowA
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2310   .bss.dotsA:00000000 dotsA
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2245   .data.white:00000000 white
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2422   .bss.stripA:00000000 stripA
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2408   .bss.stripC:00000000 stripC
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2303   .bss.walkingPixelA:00000000 walkingPixelA
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2296   .bss.steadyColorA:00000000 steadyColorA
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:1778   .text.main:000003d0 $t
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2052   .text.main:0000058a $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2201   .text.main:00000674 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2232   .bss.tick:00000000 tick
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2282   .bss.lastMessage:00000000 lastMessage
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2226   .bss.screenUpdate:00000000 screenUpdate
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2227   .bss.screenUpdate:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2233   .bss.tick:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2239   .bss.receive:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2242   .data.white:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2251   .bss.nullColor:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2261   .bss.flashMemoryStruct:00000000 flashMemoryStruct
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2258   .bss.flashMemoryStruct:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2268   .bss.tempInitChunk:00000000 tempInitChunk
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2265   .bss.tempInitChunk:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2275   .bss.bluetoothMessage:00000000 bluetoothMessage
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2272   .bss.bluetoothMessage:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2279   .bss.lastMessage:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2289   .bss.value:00000000 value
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2286   .bss.value:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2293   .bss.steadyColorA:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2300   .bss.walkingPixelA:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2307   .bss.dotsA:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2314   .bss.rainbowA:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2321   .bss.breatheA:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2331   .bss.buttonDelay:00000000 buttonDelay
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2328   .bss.buttonDelay:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2338   .bss.currColor:00000000 currColor
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2335   .bss.currColor:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2345   .bss.uartPixelCount:00000000 uartPixelCount
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2342   .bss.uartPixelCount:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2352   .bss.receiveTime:00000000 receiveTime
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2349   .bss.receiveTime:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2356   .bss.UART1:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2363   .bss.UART2:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2370   .bss.pixelsD:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2377   .bss.pixelsC:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2384   .bss.pixelsB:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2391   .bss.pixelsA:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2398   .bss.stripD:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2405   .bss.stripC:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2412   .bss.stripB:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2419   .bss.stripA:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2426   .bss.screenUpdateEvent:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2433   .bss.huart2:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2440   .bss.huart1:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2450   .bss.hdma_tim2_ch2_ch4:00000000 hdma_tim2_ch2_ch4
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2447   .bss.hdma_tim2_ch2_ch4:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2457   .bss.hdma_tim2_up:00000000 hdma_tim2_up
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2454   .bss.hdma_tim2_up:00000000 $d
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s 			page 75


C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2464   .bss.hdma_tim2_ch1:00000000 hdma_tim2_ch1
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2461   .bss.hdma_tim2_ch1:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2468   .bss.htim2:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2475   .bss.htim1:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2482   .bss.hspi2:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2057   .text.main:0000058f $d
C:\Users\igorn\AppData\Local\Temp\ccxcV1Kn.s:2057   .text.main:00000590 $t

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
NOS_UART_ReceiveHandler
HAL_SPI_Init
HAL_UART_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
memset
HAL_TIM_OC_Init
HAL_TIM_OC_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_UART_Receive_IT
HAL_UART_Transmit
visInit
NOS_WS2812B_Strip_FullInit
NOS_TimeEvent_Init
NOS_UART_ReceiveAbort
NOS_WS2812B_Strip_Effect_Init
NOS_WS2812B_Strip_Effects_AddEffect
frameBufferA
frameBufferB
frameBufferC
frameBufferD
NOS_WS2812B_Strip_ColorFill
NOS_WS2812B_Strip_Update
NOS_Strip_UART_ParseStringCommand
NOS_UART_CheckReceive
NOS_TimeEvent_Check
visHandle
NOS_TimeEvent_FinishEvent
NOS_UART_Timer_Handler
NOS_TimeEvent_TickHandler
NOS_WS2812B_Strip_Effects_Handler
NOS_UART_EndReceive
HAL_GPIO_TogglePin
NOS_UART_ParsePacket
NOS_Strip_UART_ParseCommand
NOS_WS2812B_Strip_Effect_Copy
NOS_UART_PacketApprovedNotice
